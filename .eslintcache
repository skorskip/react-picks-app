[{"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.js":"1","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.js":"2","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.js":"3","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.js":"4","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.jsx":"5","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.jsx":"6","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.js":"7","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.js":"8","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.js":"9","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.js":"10","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.js":"11","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.js":"12","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.jsx":"13","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.jsx":"14","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.js":"15","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.jsx":"16","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.js":"17","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.js":"18","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.jsx":"19","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.js":"20","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks/picksSlice.js":"21","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard.jsx":"22","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard-wrapper.jsx":"23","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard-wrapper.jsx":"24","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.jsx":"25","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/pubSub.js":"26","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.js":"27","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.jsx":"28","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.js":"29","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.jsx":"30","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/game.jsx":"31","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/pick-staus/pick-status.jsx":"32","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/team/team.jsx":"33","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/users-pick-data/users-pick-data.jsx":"34","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-data/userPickDataSlice.js":"35","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.js":"36","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.jsx":"37","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.js":"38","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/userStanding/userStanding.js":"39","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.jsx":"40","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader.jsx":"41","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.js":"42","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.js":"43","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.jsx":"44","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.jsx":"45","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-limit/userPickLimitSlice.js":"46","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.jsx":"47","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.js":"48","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.jsx":"49","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/others-dashboard/others-dashboard.jsx":"50","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.jsx":"51","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.js":"52","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.jsx":"53"},{"size":659,"mtime":1627509079617,"results":"54","hashOfConfig":"55"},{"size":1623,"mtime":1628038137744,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"55"},{"size":1169,"mtime":1623756681090,"results":"58","hashOfConfig":"55"},{"size":8578,"mtime":1626118008111,"results":"59","hashOfConfig":"55"},{"size":2473,"mtime":1620315185502,"results":"60","hashOfConfig":"55"},{"size":344,"mtime":1615419711242,"results":"61","hashOfConfig":"55"},{"size":2756,"mtime":1626118008098,"results":"62","hashOfConfig":"55"},{"size":4298,"mtime":1628124506790,"results":"63","hashOfConfig":"55"},{"size":632,"mtime":1627140509554,"results":"64","hashOfConfig":"55"},{"size":430,"mtime":1625600843031,"results":"65","hashOfConfig":"55"},{"size":1326,"mtime":1626118008099,"results":"66","hashOfConfig":"55"},{"size":5647,"mtime":1628039614886,"results":"67","hashOfConfig":"55"},{"size":6176,"mtime":1628120506180,"results":"68","hashOfConfig":"55"},{"size":2273,"mtime":1626118008090,"results":"69","hashOfConfig":"55"},{"size":1867,"mtime":1616451832570,"results":"70","hashOfConfig":"55"},{"size":1703,"mtime":1626118008100,"results":"71","hashOfConfig":"55"},{"size":1206,"mtime":1618083897453,"results":"72","hashOfConfig":"55"},{"size":3005,"mtime":1628037346252,"results":"73","hashOfConfig":"55"},{"size":1273,"mtime":1627070672029,"results":"74","hashOfConfig":"55"},{"size":7212,"mtime":1628126213444,"results":"75","hashOfConfig":"55"},{"size":3717,"mtime":1628125849545,"results":"76","hashOfConfig":"55"},{"size":2042,"mtime":1627140509556,"results":"77","hashOfConfig":"55"},{"size":1201,"mtime":1620313780781,"results":"78","hashOfConfig":"55"},{"size":2793,"mtime":1627600222872,"results":"79","hashOfConfig":"55"},{"size":754,"mtime":1619886095853,"results":"80","hashOfConfig":"55"},{"size":271,"mtime":1627510789942,"results":"81","hashOfConfig":"55"},{"size":828,"mtime":1627594712135,"results":"82","hashOfConfig":"55"},{"size":1698,"mtime":1626118008091,"results":"83","hashOfConfig":"55"},{"size":4459,"mtime":1628038312973,"results":"84","hashOfConfig":"55"},{"size":5245,"mtime":1627305485212,"results":"85","hashOfConfig":"55"},{"size":1486,"mtime":1627306164560,"results":"86","hashOfConfig":"55"},{"size":2508,"mtime":1623523355536,"results":"87","hashOfConfig":"55"},{"size":4073,"mtime":1628124806858,"results":"88","hashOfConfig":"55"},{"size":1836,"mtime":1626118008094,"results":"89","hashOfConfig":"55"},{"size":1776,"mtime":1626118008090,"results":"90","hashOfConfig":"55"},{"size":2157,"mtime":1628125730598,"results":"91","hashOfConfig":"55"},{"size":1966,"mtime":1626118008095,"results":"92","hashOfConfig":"55"},{"size":528,"mtime":1622382132894,"results":"93","hashOfConfig":"55"},{"size":4442,"mtime":1627140509558,"results":"94","hashOfConfig":"55"},{"size":601,"mtime":1622414415701,"results":"95","hashOfConfig":"55"},{"size":1138,"mtime":1626118008093,"results":"96","hashOfConfig":"55"},{"size":2797,"mtime":1626118008091,"results":"97","hashOfConfig":"55"},{"size":5060,"mtime":1628125560809,"results":"98","hashOfConfig":"55"},{"size":4988,"mtime":1627867186096,"results":"99","hashOfConfig":"55"},{"size":1866,"mtime":1626118008094,"results":"100","hashOfConfig":"55"},{"size":4440,"mtime":1628125467605,"results":"101","hashOfConfig":"55"},{"size":716,"mtime":1626118008089,"results":"102","hashOfConfig":"55"},{"size":1521,"mtime":1628126423893,"results":"103","hashOfConfig":"55"},{"size":2947,"mtime":1627322839113,"results":"104","hashOfConfig":"55"},{"size":701,"mtime":1627596863553,"results":"105","hashOfConfig":"55"},{"size":1467,"mtime":1627598826505,"results":"106","hashOfConfig":"55"},{"size":3367,"mtime":1628038955328,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1u3njjf",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.js",[],["226","227"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.js",["228"],"import { Home } from './views/home/home';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchToken } from './controller/token/tokenSlice';\nimport { PickLoader } from './components/pick-loader/pick-loader';\nimport './App.scss';\nimport { useEffect } from 'react';\nimport { fetchLeague } from './controller/league/leagueSlice';\nimport { status } from './configs/status';\nimport { MessagePopup } from './components/message/messagePopup';\nimport { ThemeSwitcher } from './components/theme-switcher/theme-switcher';\n\nAmplify.configure({...awsconfig, ssr: true});\n\nfunction App() {\n\n  const tokenState = useSelector((state) => state.token.status)\n  const userState = useSelector((state) => state.user.status)\n  const leagueState = useSelector((state) => state.league.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(userState === status.COMPLETE && \n      tokenState === status.COMPLETE && \n      leagueState === status.IDLE) {\n\n      dispatch(fetchLeague());\n    }\n  }, [userState, tokenState, dispatch, leagueState]);\n\n  useEffect(() => {\n    dispatch(fetchToken());\n  },[]);\n\n  if(userState === status.LOADING || \n    leagueState === status.LOADING) {\n    return (\n      <div className=\"loader-container\">\n        <ThemeSwitcher />\n        <PickLoader />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeSwitcher />\n      <Router>\n        <Home />\n        <MessagePopup />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.jsx",["229"],"import React, { useEffect, useState } from 'react'\nimport { PickLogo } from '../../components/pick-logo/pick-logo'\nimport './login.css'\nimport { Form, Input, Button, Message,Icon } from 'semantic-ui-react'\nimport { fetchUser, login, createPassword, resetPassword, forgotPassword } from '../../controller/user/userSlice'\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AmplifyEnum } from '../../utils/amplifyAuth';\nimport { fetchToken } from '../../controller/token/tokenSlice';\nimport { status } from '../../configs/status'\n\nexport const Login = () => {\n    const formInfo = {\n        username: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\",\n        code: \"\"\n    }\n\n    let { search } = useLocation();\n    let history = useHistory();\n    const query = new URLSearchParams(search);\n    const loginType = query.get(\"type\");\n    const [title, setTitle] = useState('pickem');\n    const [completeLoginForm, setCompleteLoginForm] = useState(false);\n    const [forgotPasswordForm, setForgotPasswordForm] = useState(loginType !== null ? loginType===\"newpassword\" : false);\n    const [passwordIncorrect, setPasswordIncorrect] = useState(false);\n    const [passwordMismatch, setPasswordMismatch] = useState(false);\n    const [emptyUsername, setEmptyUsername] = useState(false);\n    const [formData, setFormData] = useState(formInfo);\n    const [laoder, setLoader] = useState(false);\n    const tokenState = useSelector((state) => state.token.status);\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    const completeForgotPassword = () => {\n        setPasswordMismatch(formData.password !== formData.confirmPassword);\n        if(formData.password !== '' && formData.password === formData.confirmPassword) {\n            resetPassword(formData.username, formData.password, formData.code).then((result) => {\n                setLoader(false);\n                setToken();\n            });\n        }\n    }\n\n    const completeLogin = () => {\n        setPasswordMismatch(formData.newPassword !== formData.confirmPassword);\n        if(formData.password !== '' && formData.newPassword === formData.confirmPassword) {\n            createPassword(formData.username, formData.password, formData.newPassword).then((result) => {\n                setLoader(false);\n                setToken();\n            });\n        }\n    }\n\n    const authorize = () => {\n        login(formData.username, formData.password).then((result) => {\n            setLoader(false);\n            if(result.error === AmplifyEnum.inValidUser) {\n                setPasswordIncorrect(true);\n            } else if(result.challengeName != null && result.challengeName === AmplifyEnum.needNewPassword) {\n                setTitle('Welcome!');\n                setCompleteLoginForm(true);\n            } else {\n                setToken();\n            } \n        });\n    }\n    \n    const setToken = () => {\n        dispatch(fetchToken());\n        setUsername(formData.username);\n        setPassword(formData.password);\n    }\n\n    const attemptLogin = event => {\n        event.preventDefault();\n        setLoader(true);\n        if(formData.username === '') {\n            setLoader(false);\n            setEmptyUsername(true);\n        } else {\n            if(forgotPasswordForm) {\n                completeForgotPassword();\n            } else if(completeLoginForm) {\n                completeLogin();\n            } else {\n                authorize();\n            }\n        }\n    }\n\n    const showForgotPassword = () => {\n        if(formData.username !== '') {\n            setPasswordIncorrect(false);\n            setEmptyUsername(false);\n            setFormData({...formData, password: ''});\n            setForgotPasswordForm(true);\n            setTitle('Whoops...');\n            forgotPassword(formData.username);\n        } else {\n            setEmptyUsername(true);\n        }\n    }\n\n    const usernameForm = !completeLoginForm && (\n        <Form.Field\n            control={Input}\n            name=\"username\"\n            placeholder=\"Username/Email\"\n            type=\"text\"\n            icon='user'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.username}\n            className=\"loginInput\"\n            error={(emptyUsername && {\n                content: 'Must provide username or email',\n                pointing: 'above'\n            }) || passwordIncorrect}\n        />\n    );\n\n    const codeForm = forgotPasswordForm && (\n        <Form.Field \n            control={Input}\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"Verification code\"\n            icon='key'\n            iconPosition='left'\n            className=\"loginInput\"\n            onChange={handleChange}\n            value={formData.code}\n        />\n    );\n\n    const passwordForm = !completeLoginForm &&(\n        <Form.Field\n            control={Input}\n            name='password'\n            placeholder={forgotPasswordForm ? \"New Password\" : \"Password\"}\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            className=\"loginInput\"\n            onChange={handleChange} \n            value={formData.password}\n            error={passwordIncorrect && {\n                content: 'Username or password incorrect',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    const newPasswordForm = completeLoginForm && (\n        <Form.Field\n            control={Input}\n            name='newPassword'\n            placeholder='New Password'\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            className=\"loginInput\"\n            onChange={handleChange} \n            value={formData.newPassword}\n            error={passwordIncorrect && {\n                content: 'Username or password incorrect',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    const passwordConfirmForm = (forgotPasswordForm || completeLoginForm) && (\n        <Form.Field\n            control={Input}\n            name='confirmPassword'\n            placeholder='Confirm password'\n            type='password'\n            icon='lock'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.confirmPassword}\n            className=\"loginInput\"\n            error={passwordMismatch && { \n                content: 'Passwords do not match.',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    useEffect(() => {\n        if(tokenState === status.COMPLETE && username !== '' && password !== '') {\n            dispatch(fetchUser(username, password));\n            history.push(\"/\");\n        }\n    }, [tokenState, username, password, dispatch]);\n\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"loginHeader\">\n                <div>\n                    <PickLogo sizeParam=\"'m'\"></PickLogo>\n                </div>\n                <div className=\"loginTitle\">\n                    {title}\n                </div>\n                { forgotPasswordForm && \n                <Message warning>\n                    <Icon name='info circle'/>\n                    Check your email for a code.\n                </Message> }\n                { completeLoginForm && \n                <Message warning>\n                    <Icon name='info circle'/>\n                    Create a new password.\n                </Message> }\n                <Form onSubmit={attemptLogin} className=\"loginForm\" size='big'>\n                    { usernameForm }\n                    { codeForm }\n                    { passwordForm }\n                    { newPasswordForm }\n                    { passwordConfirmForm }\n\n                    {laoder ? \n                        <Button loading size=\"huge\" className=\"loginButton primary-background base-color noSelect\">Loading</Button>:\n                        <Button content=\"Login\" type=\"submit\" size=\"huge\" className=\"loginButton primary-background base-color noSelect\" />\n                    }\n                </Form>\n                <br></br>\n                <p className=\"forgot-password-link secondary-color\">\n                    Forgot Password? &nbsp;<div className=\"link\" onClick={showForgotPassword}>Reset here.</div>\n                </p>\n            </div>\n        </div>  \n    );\n} \n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.js",["230"],"import {  createSlice, createEntityAdapter, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../../utils/client'\nimport { environment } from '../../configs/environment';\nimport { User } from '../../model/user/user';\nimport AmplifyAuth, { AmplifyEnum } from '../../utils/amplifyAuth';\nimport { status } from '../../configs/status';\nimport { publish, SHOW_MESSAGE } from '../../utils/pubSub';\n\nconst usersUrl = environment.userServiceURL + 'users';\n\nconst userAdapter = createEntityAdapter();\n\nconst initialState = userAdapter.getInitialState({\n    status: localStorage.getItem(\"user\") === null ? status.IDLE : status.COMPLETE,\n    user: localStorage.getItem(\"user\") === null ? {} : JSON.parse(localStorage.getItem(\"user\"))\n});\n\nexport const login = async (username, password) => {\n    try {\n        let response = await AmplifyAuth.AmplifyLogin(username, password);\n        return response;\n    } catch(error) {\n        console.error(error);\n        return {error: AmplifyEnum.inValidUser}\n        publish(SHOW_MESSAGE, {type: status.ERROR, message: status.MESSAGE.USER.LOGIN_ERROR});\n    }\n};\n\nexport const forgotPassword = async (username) => {\n    try {\n        let response = await AmplifyAuth.SendForgotPasswordCode(username);\n        publish(SHOW_MESSAGE, {type: status.SUCCESS, message: status.MESSAGE.USER.PASSCODE_SUCCESS})\n        return response\n    } catch(error) {\n        console.error(error);\n        publish(SHOW_MESSAGE, {type: status.ERROR, message: status.MESSAGE.USER.PASSWORD_ERROR})\n    }\n}\n\nexport const resetPassword = async (username, password, code) => {\n    try {\n       let response = await AmplifyAuth.ForgotPassword(username, password, code);\n        publish(SHOW_MESSAGE, {type: status.SUCCESS, message: status.MESSAGE.USER.PASSWORD_SUCCESS})\n        return response;\n    } catch(error) {\n        console.error(error);\n        publish(SHOW_MESSAGE, {type: status.ERROR, message: status.MESSAGE.USER.PASSWORD_ERROR});\n    }\n}\n\nexport const createPassword = async (username, tempPassword, newPassword) => {\n    try {\n        let response = await AmplifyAuth.CompletePasswordLogin(username, tempPassword, newPassword);\n        publish(SHOW_MESSAGE, {type: status.SUCCESS, message: status.MESSAGE.USER.PASSWORD_SUCCESS});\n        return response;\n    } catch(error) {\n        console.error(error)\n        publish(SHOW_MESSAGE, {type: status.ERROR, message: status.MESSAGE.USER.PASSWORD_ERROR});\n    }\n}\n\nexport const signOut = createAsyncThunk('user/signOut', async () => {\n    try {\n        let response = await AmplifyAuth.SignOut();\n        localStorage.clear();\n        return response;\n    } catch(error) {\n        console.error(error);\n        publish(SHOW_MESSAGE, {type: status.ERROR, message: status.MESSAGE.ERROR_GENERIC});\n    }\n})\n\nexport const fetchUser = createAsyncThunk('user/fetchUser',  async (username, password, token) => {\n    const url = usersUrl + '/login';\n    try {\n        const newUser = User.createUser(username, password);\n        const response = await client.post(url, newUser, {Authorization: token});\n        localStorage.setItem(\"user\", JSON.stringify(response[0]));\n        return response[0];\n    } catch(error) {\n        console.error(error);\n        publish(SHOW_MESSAGE, {type:status.ERROR, message:status.MESSAGE.USER.LOGIN_ERROR});\n        return {status: status.ERROR, message: error}\n    }\n})   \n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    extraReducers : (builder) => {\n        builder\n            .addCase(fetchUser.fulfilled, (state, action) => {\n                if(action.payload?.status === status.ERROR) {\n                    state.user = {}\n                    state.status = status.ERROR;\n                } else {\n                    state.user = action.payload;\n                    state.status = status.COMPLETE;\n                }\n            })\n            .addCase(fetchUser.pending, (state, action) => {\n                state.status = status.LOADING;\n            })\n            .addCase(signOut.fulfilled, (state, action) => {\n                state.user = {}\n                state.status = status.IDLE;\n            })\n    },\n});\n\nexport const { usersLoaded } = userSlice.actions\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer\n\n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.jsx",["231","232"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../controller/user/userSlice';\nimport { selectPicksIds, fetchPicks, getPicksSetWeek } from '../../controller/picks/picksSlice';\nimport { fetchGames } from '../../controller/games/gamesSlice';\nimport { selectLeague } from '../../controller/league/leagueSlice';\nimport { Switch, Route, useLocation, useParams } from \"react-router-dom\";\nimport { GamesTabBar } from './components/games-tab-bar/games-tab-bar';\nimport { WeekSwitcher } from './components/week-switcher/week-switcher';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon } from 'semantic-ui-react';\nimport { WEEK_SHOW_WEEKS, Subscriber } from '../../utils/pubSub';\nimport \"./games.css\";\nimport \"../../utils/slideTransition.scss\";\nimport { fetchUserPickData } from '../../controller/user-pick-data/userPickDataSlice';\nimport { PickPeekModal } from '../../components/pick-peek-modal/pick-peek-modal';\nimport { status } from '../../configs/status';\nimport { UserTypeEnum } from '../../model/user/user';\n\nexport const Games = ({routes}) => {\n    const user = useSelector(selectUser);\n    const league = useSelector(selectLeague);\n    const pickIds = useSelector(selectPicksIds);\n    const gamesState = useSelector((state) => state.games.status);\n    const leagueState = useSelector((state) => state.league.status);\n    const setWeek = useSelector(getPicksSetWeek);\n    const dispatch = useDispatch();\n\n    let location = useLocation();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const animationTime = { enter: 200, exit: 200};\n    let { view } = useParams();\n    const season = query.get(\"season\")\n    const week = query.get(\"week\")\n    const seasonType = query.get(\"seasonType\")\n    const other = query.get(\"user\");\n\n    const currSeason = league.currentSeason\n    const currWeek = league.currentWeek \n    const currSeasonType = league.currentSeasonType\n    const [weeksShown, setWeeksShown] = useState(false);\n    \n\n    const showWeeks = (show) => {\n        setWeeksShown(show);\n    }\n\n    const spectatorView = (user.type !== UserTypeEnum.PARTICIPANT) && (\n        <div className=\"header-container\">\n            <div className=\"spectator-container warn-background\">\n                <div class=\"base-color spectator-icon\">\n                    <Icon name=\"binoculars\" />\n                </div>\n                <span class=\"base-color\">\n                    Spectator Mode\n                </span>\n            </div>\n        </div>\n    );\n\n    const gamesTab = (user.type === UserTypeEnum.PARTICIPANT && (other === null || other === \"null\")) && (\n        <GamesTabBar pickCount={pickIds.length}/>\n    )\n\n    const transitionGroup = (!weeksShown) && (\n        <TransitionGroup component=\"div\" className=\"route-container\">\n            <CSSTransition \n                key={view} \n                timeout={animationTime} \n                classNames=\"pageSlider\" \n                mountOnEnter={false} \n                unmountOnExit={true}>\n                <div className={view === \"pick\" ? \"left\" : \"right\"}>\n                    <Switch location={location}>\n                        {routes.map((route, i) =>(\n                            <Route\n                                key={i}\n                                path={route.path}\n                                render={props => (<route.component key={i} />)}\n                            />\n                        ))}\n                    </Switch>\n                </div>\n            </CSSTransition>\n        </TransitionGroup>\n    );\n\n    useEffect(() => {\n        if(gamesState === status.IDLE && \n            leagueState === status.COMPLETE) {\n            dispatch(fetchGames({ season: currSeason, seasonType: currSeasonType, week: currWeek, user: user }));\n            dispatch(fetchUserPickData({ season: currSeason, seasonType: currSeasonType, week: currWeek }));\n            if(other === null || other === \"null\") {\n                dispatch(fetchPicks({ season: currSeason, seasonType: currSeasonType, week: currWeek, user: user }));\n            }\n        }\n    }, [gamesState, leagueState, currSeason, currWeek, currSeasonType, dispatch, user])\n\n    useEffect(() => {\n        const shouldRefresh = () => {\n            if(season && week && seasonType) {\n                if(parseInt(week) === parseInt(currWeek)) {\n                    if(parseInt(setWeek) !== parseInt(currWeek)) {\n                        return true;\n                    } else return false;\n                } else return true;\n            } else {\n                return false;\n            }\n        }\n\n        if(shouldRefresh()){\n            dispatch(fetchGames({ season: season, seasonType: seasonType, week: week, user: user }));\n            dispatch(fetchUserPickData({ season: season, seasonType: seasonType, week: week }));\n            if(other === null || other === \"null\") {\n                dispatch(fetchPicks({ season: season, seasonType: seasonType, week: week, user: user }));\n            }\n        }\n    }, [dispatch, user, season, week, seasonType, view])\n\n    return (\n        <>\n            <Subscriber topic={WEEK_SHOW_WEEKS}>\n                {data => (<>{showWeeks(data)}</>)}\n            </Subscriber>\n            { spectatorView }\n            { gamesTab }\n            <div className=\"games-week-container\">\n                <div className=\"week-switcher-container\">\n                    <WeekSwitcher />\n                </div>\n                { transitionGroup }\n            </div>\n            <PickPeekModal />\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.jsx",["233"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../../../controller/user/userSlice';\nimport { addPicks, selectPicksGamesIds } from '../../../../controller/picks/picksSlice';\nimport { selectGameIds } from '../../../../controller/games/gamesSlice';\nimport { GameLoader } from '../../../../components/game-loader/game-loader';\nimport { GameDashboardWrapper } from './game-dashboard-wrapper';\nimport { Button } from 'semantic-ui-react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { selectUserPickLimit, fetchUserPickLimit } from '../../../../controller/user-pick-limit/userPickLimitSlice';\nimport { userStandingById, fetchUserStandings } from '../../../../controller/user-standings/userStandingsSlice';\nimport { selectLeague } from '../../../../controller/league/leagueSlice';\nimport './game-dashboard.css';\nimport { status } from '../../../../configs/status';\n\nexport const GameDashboard = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(selectUser);\n    const userState = useSelector((state) => state.user.status);\n    const selectedGames = useSelector(selectGameIds);\n    const selectedPicksGames = useSelector(selectPicksGamesIds);\n    const gamesIds = selectedGames.filter(gameId => !selectedPicksGames.includes(gameId));\n    const gameLoader = useSelector((state) => state.games.status);\n    const pickLoader = useSelector((state) => state.picks.status);\n    const pickLimitState = useSelector((state) => state.userPickLimit.status);\n    const pickLimit = useSelector(selectUserPickLimit);\n    const userStandings = useSelector((state) => userStandingById(state, user?.user_id));\n    const userStandingsState = useSelector((state) => state.userStandings.status);\n    const league = useSelector(selectLeague);\n    const leagueState = useSelector((state) => state.league.status);\n    \n    const history = useHistory();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const week = query.get(\"week\");\n\n    const initialStaged = JSON.parse(localStorage.getItem(\"stagedPicks\"));\n    const [stagedPicks, setStagedPicks] = useState(initialStaged !== null ? initialStaged : {});\n    const [stagedCount, setStagedCount] = useState(initialStaged === null ? 0 : Object.keys(initialStaged).length);\n\n    const teamSelected = (event) => {\n        let updated = stagedPicks;\n        if(event.highlight) {\n            let newPick = {\n                game_id: event.gameId,\n                team_id: event.teamId,\n                submitted_date: new Date().toISOString(),\n                user_id: user.user_id,\n                pick_submit_by_date: event.submitBy\n            }\n            updated[event.gameId] = newPick;\n        } else {\n            delete updated[event.gameId];\n        }\n        localStorage.setItem(\"stagedPicks\", JSON.stringify(updated));\n        setStagedCount(Object.keys(updated).length);\n        setStagedPicks(updated);\n    }\n\n    const submitPicks = () => {\n        let stagedPicksList = Object.values(stagedPicks);\n        let totalPicks = parseInt(stagedPicksList.length) + parseInt(userStandings.pending_picks) + parseInt(userStandings.picks);\n        if(stagedPicksList.length === 0) {\n            alert(\"Going to need more than that!\")\n        } else if(stagedPicksList.find((staged) => new Date(staged.pick_submit_by_date) < new Date())) {\n            alert(\"Can't Submit Passed the Deadline\")\n        } else if(totalPicks <= parseInt(pickLimit.max_picks)) {\n            setStagedPicks({});\n            setStagedCount(0);\n            localStorage.setItem(\"stagedPicks\", null);\n            dispatch(addPicks({ picks: stagedPicksList }));\n            history.push(\"/games/pick\");\n        } else {\n            alert(`You got too many picks, ${totalPicks - pickLimit.max_picks} over ${pickLimit.max_picks}`)\n        }\n    }\n\n    const noGames = gamesIds.length === 0 && (\n        <div className=\"no-games-set secondary-color\">\n            No Unpicked Games\n        </div>\n    );\n    \n    const getSubmitClass = () => {\n        return (stagedCount > 0 && (parseInt(week) === parseInt(league.currentWeek) || week === null)) ? \"submit-container show-submit-button\" : \"submit-container hide-submit-button\"\n    };\n\n    const games = gamesIds.map((gameId, index) => {\n        return(\n            <GameDashboardWrapper\n                key={\"game-wrapper-\" + gameId}\n                id={gameId} \n                previousId={gamesIds[index - 1]}\n                index={index}\n                picked={stagedPicks === {} ? null : stagedPicks[gameId]}\n                onTeamSelected={teamSelected}\n            />\n        )\n    });\n\n    useEffect(() => {\n        if(userStandingsState === status.IDLE && leagueState === status.COMPLETE) {\n            dispatch(fetchUserStandings({season: league.currentSeason, seasonType: league.currentSeasonType}));\n        }\n    }, [userState, leagueState, userStandingsState, league, dispatch]);\n\n    useEffect(() => {\n        if(pickLimitState === status.IDLE && leagueState === status.COMPLETE && userState === status.COMPLETE) {\n            dispatch(fetchUserPickLimit({season: league.currentSeason, seasonType: league.currentSeasonType, week: league.currentWeek, user_id: user.user_id}))\n        }\n    }, [pickLimitState, leagueState, userState, league, user, dispatch]);\n\n    useEffect(() => {\n        if(Object.values(stagedPicks).find((initial) => new Date(initial.pick_submit_by_date) > new Date()) === undefined) {\n            setStagedCount(0);\n            setStagedPicks({});\n        }\n    },[]);\n\n    if(gameLoader === status.LOADING || gamesIds === undefined || pickLoader === status.LOADING) {\n        return (<GameLoader height=\"110\" count=\"8\"/>)\n    }\n\n    return (\n        <div className=\"games-container page\">\n            { noGames }\n            { games }\n            <div className={getSubmitClass()}>\n                <Button className=\"primary-background base-color submit-button\" onClick={submitPicks}>\n                    👍&nbsp;&nbsp;&nbsp;Submit ({stagedCount})\n                </Button>\n            </div>\n        </div>\n    );\n} ","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks/picksSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard-wrapper.jsx",["234","235"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectPicksById } from '../../../../controller/picks/picksSlice';\nimport { selectGamesById, selectTeamById } from '../../../../controller/games/gamesSlice';\nimport { Game } from '../../../../components/game/game';\nimport { Button, Icon } from 'semantic-ui-react';\n\nexport const PicksDashboardWrapper = ({ \n    id, \n    previousId, \n    index, \n    onTeamSelected,\n    showDelete,\n    onDelete\n}) => {\n\n    const pick = useSelector((state) => selectPicksById(state, id))\n    const previousPick = useSelector((state) => selectPicksById(state, previousId));\n    const game = useSelector((state) => selectGamesById(state, pick.game_id));\n    const previousGame = useSelector((state) => {\n        if(previousPick !== undefined){ return selectGamesById(state, previousPick.game_id)}\n    });\n    \n    const homeTeam = useSelector((state) => selectTeamById(state, game?.home_team_id));\n    const awayTeam = useSelector((state) => selectTeamById(state, game?.away_team_id));\n    const [removeGame, setRemoveGame] = useState(false);\n    const gamePassedEdit = new Date() > new Date(game?.pick_submit_by_date);\n\n    const showSubmitTime = () => {\n        if((index === 0) || previousGame?.pick_submit_by_date !== game?.pick_submit_by_date) {\n            return new Date(game?.pick_submit_by_date ) > new Date();\n        } else return false;\n    }\n\n    const deleteClicked = () => {\n        onDelete(pick);\n        setRemoveGame(true);\n    }\n\n    return(\n        <Game\n            key={\"game-\" + id}\n            game={game}\n            homeTeam={homeTeam}\n            awayTeam={awayTeam}\n            pick={pick}\n            showSubmitTime={showSubmitTime()}\n            disabled={(!showDelete && !gamePassedEdit)}\n            remove={removeGame}\n            showDeleteButton={(showDelete && !removeGame && !gamePassedEdit)}\n            onTeamSelected={(event) => onTeamSelected(event)}\n            onDeleteClicked={(event) => deleteClicked()}\n        />\n    )\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard-wrapper.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/pubSub.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.jsx",["236"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport { PickLogo } from '../../../../components/pick-logo/pick-logo';\nimport { selectMessageSource,selectLeague } from '../../../../controller/league/leagueSlice';\nimport { selectAnnouncements,fetchAnnouncements } from '../../../../controller/announcements/announcementsSlice';\nimport './nav-bar.css';\nimport { status } from '../../../../configs/status';\n\nexport const NavBar = () => {\n    const {pathname} = useLocation();\n    const history = useHistory();\n    const route = (pathname.split(\"/\").length > 0) ? pathname.split(\"/\")[1] : \"\";\n    const messageSource = useSelector(selectMessageSource);\n    const messagesSelect = useSelector(selectAnnouncements);\n    const [messages, setMessages] = useState(messagesSelect.announcements);\n    const announcementsStatus = useSelector((state) => state.announcements.status);\n    const userState = useSelector((state) => state.user.status);\n    const leagueState = useSelector((state) => state.league.status);\n    const league = useSelector(selectLeague);\n    const dispatch = useDispatch();\n    \n    const getIconClass = (link) => {\n        return (link === route) ? \"primary-color\" : \"secondary-color\";\n    }\n\n    const goToChat = () => {\n        let url = `https://slack.com/app_redirect?channel=${messageSource.chatChannel}`;\n        window.open(url, '_blank');\n    }\n\n    const clickNav = (location) => {\n        if(location === \"/announcements\") {\n            clickAnnouncements();\n        }\n        history.push(location)\n    }\n\n    const messageNotif = (messages > 0) && (\n        <Label color='red' attached=\"top right\" className=\"notif-icon\">\n            {messages}\n        </Label>\n    );\n\n    const clickAnnouncements = () => {\n        setMessages(0);\n        localStorage.setItem(\"announcementCheck\", new Date().toUTCString())\n    }\n\n    useEffect(() => {\n        if(userState === status.COMPLETE && \n            announcementsStatus === status.IDLE && \n            leagueState === status.COMPLETE ) {\n                \n            const params = { lastCheckDate: localStorage.getItem(\"announcementCheck\") }\n            dispatch(fetchAnnouncements(params));\n        }\n    }, [announcementsStatus, userState, dispatch]);\n\n    useEffect(() => {\n        if(messagesSelect.announcements > 0) {\n            setMessages(messagesSelect.announcements);\n        }\n    }, [messagesSelect]);\n\n    return (\n        <div className=\"base-background nav-container\">\n            <div className=\"logo-container-large\">\n                <div onClick={() => clickNav(`/games/game?season=${league.currentSeason}&seasonType=${league.currentSeasonType}&week=${league.currentWeek}`)}>\n                    <PickLogo sizeParam='xs'/>\n                </div>\n            </div>\n            <div className=\"button-group\">\n                <div className=\"logo-container\">\n                    <div onClick={() => clickNav(`/games/game?season=${league.currentSeason}&seasonType=${league.currentSeasonType}&week=${league.currentWeek}`)}>\n                        <PickLogo sizeParam='xs'/>\n                    </div>\n                </div>\n                <Button icon basic className=\"nav-button\" onClick={() => clickNav(\"/standings\")}>\n                    <div className={getIconClass(\"standings\")}>\n                        <Icon size='large' name='list'/>\n                    </div>\n                </Button>\n                <Button icon basic className=\"nav-button\" onClick={() => clickNav(\"/announcements\")}>\n                    <div className={getIconClass(\"announcements\")}>\n                        <Icon size='large' name='bullhorn'/>\n                        { messageNotif }\n                    </div>\n                </Button>\n                <Button icon basic className=\"nav-button\" onClick={goToChat}>\n                    <div className=\"secondary-color\" >\n                        <Icon size='large' name='comments'/>\n                    </div>\n                </Button>\n                <Button icon basic className=\"nav-button\" onClick={() => clickNav(\"/profile\")}>\n                    <div className={getIconClass(\"profile\")}>\n                        <Icon size='large' name='address card outline' />\n                    </div>\n                </Button>\n            </div>\n        </div>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/game.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/pick-staus/pick-status.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/team/team.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game/components/users-pick-data/users-pick-data.jsx",["237"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon, Label, Segment } from 'semantic-ui-react';\nimport { selectUserPickDataByGame } from '../../../../controller/user-pick-data/userPickDataSlice';\nimport { GameStatusEnum } from '../../../../model/game/game';\nimport { publish, SHOW_MODAL } from '../../../../utils/pubSub';\nimport './users-pick-data.css';\n\nexport const UsersPickData = ({ game }) => {\n\n    const picksData = useSelector((state) => selectUserPickDataByGame(state, game.game_id));\n    const awayPicks = picksData ? picksData.filter((pick) => pick.team_id === game.away_team_id): [];\n    const homePicks = picksData ? picksData.filter((pick) => pick.team_id === game.home_team_id): [];\n    const [showPickers, setShowPickers] = useState(false);\n\n    const picksDataClick = () => {\n        setShowPickers(!showPickers);\n    }\n\n    const closePicksData = () => {\n        setShowPickers(false);\n    }\n\n    const setUserModal = (pick) => {\n        publish(SHOW_MODAL, pick);\n    }\n\n    const containerClass = () => {\n        if(game.game_status === GameStatusEnum.completed) {\n            return \"picks-data-container-final\";\n        } else {\n            return \"picks-data-container\";\n        }\n    }\n\n    const groupClass = () => {\n        if(game.game_status === GameStatusEnum.completed) {\n            return \"picks-data-group-final\";\n        } else {\n            return \"picks-data-group\";\n        }\n    }\n\n    const picksDataButton = (\n        <div className={containerClass()}>\n            <div className={groupClass()}>\n                <div className=\"floating-users-pick-button\" onClick={picksDataClick}>\n                    <div className=\"user-pick-label-container\">\n                        <Label className=\"base-background tiertary-color user-pick-label\">\n                            <Icon name='thumbs up' className=\"accent\"/>\n                            <div className=\"accent\">{awayPicks.length}</div>\n                        </Label>\n                    </div>\n                </div>\n                <div className=\"floating-users-pick-button\" onClick={picksDataClick}>\n                    <div className=\"user-pick-label-container\">\n                        <Label className=\"base-background tiertary-color user-pick-label\">\n                            <Icon name='thumbs up' className=\"accent\"/>\n                            <div className=\"accent\">{homePicks.length}</div>\n                        </Label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const buttonListAway = awayPicks.map((pick) => {\n        return (\n            <Button className=\"user-item secondary-color tiertary-light-background\" onClick={() => setUserModal(pick)}>\n                <div>{ pick.first_name } {pick.last_name.substring(0,1)}.</div>\n            </Button>\n        );\n    });\n\n    const buttonListHome = homePicks.map((pick) => {\n        return (\n            <Button className=\"user-item secondary-color tiertary-light-background\" onClick={() => setUserModal(pick)}>\n                <div>{ pick.first_name } {pick.last_name.substring(0,1)}.</div>\n            </Button>\n        ); \n    })\n\n    const picksDataList = (showPickers) && (\n        <div className=\"users-pick-list\">\n            <div className=\"picks-data-users\">\n                <div className=\"users-column\">\n                    { buttonListAway }\n                </div>\n                <div className=\"users-column\">\n                    { buttonListHome }\n                </div>\n            </div>\n            <Button onClick={closePicksData} className=\"show-less-button secondary-color base-background\">\n                <div className=\"show-less-button-group\">\n                    <div className=\"close-modal-icon\">\n                        <Icon name=\"chevron up\" />\n                    </div>\n                    Show Less\n                </div>\n            </Button>\n        </div>\n    )\n\n    return (\n        <>\n            { picksDataList }\n            { picksDataButton }\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-data/userPickDataSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/userStanding/userStanding.js",[],["238","239"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-limit/userPickLimitSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.jsx",["240"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/others-dashboard/others-dashboard.jsx",["241"],"import React, {useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { fetchUsersPicks } from \"../../../../controller/picks/picksSlice\";\nimport { PicksDashboard } from \"../picks-dashboard/picks-dashboard\";\nimport { userStandingById, fetchUserStandings } from \"../../../../controller/user-standings/userStandingsSlice\";\nimport { selectLeague } from '../../../../controller/league/leagueSlice';\nimport { status } from '../../../../configs/status';\nimport \"./others-dashboard.css\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport const OthersDashboard = ({}) => {\n    const dispatch = useDispatch();\n    let { search } = useLocation();\n    const history = useHistory();\n    const query = new URLSearchParams(search);\n    const season = query.get(\"season\");\n    const week = query.get(\"week\");\n    const seasonType = query.get(\"seasonType\");\n    const user = query.get(\"user\");\n    const userInfo = useSelector((state) => userStandingById(state, parseInt(user)));\n    const standingsStatus = useSelector((state) => state.userStandings.status);\n    const league = useSelector(selectLeague);\n    const leagueStatus = useSelector((state) => state.league.status);\n\n    const goBack = () => {\n        history.goBack();\n    }\n\n    useEffect(() => {\n        if(standingsStatus === status.IDLE && leagueStatus === status.COMPLETE) {\n            dispatch(fetchUserStandings({season: league.currentSeason, seasonType: league.currentSeasonType}));\n        }\n    }, [dispatch, standingsStatus, leagueStatus, league]);\n\n    useEffect(() => {\n        if(user != null && week != null && season != null && seasonType != null) {\n            dispatch(fetchUsersPicks({user: user, week: week, seasonType: seasonType, season: season}))\n        }\n    }, [user, week, season, seasonType, dispatch]);\n\n    return (\n        <>\n            {\n                (user != null && week != null && season != null && seasonType != null && userInfo != null) ? (\n                    <>\n                        <div className=\"other-user-info-container\" onClick={goBack}>\n                            <div className=\"other-user-info tiertary-color base-background\">\n                                <Icon name=\"chevron left\" className=\"secondary-color\"/>\n                                <div className=\"secondary-color other-user-name\">\n                                    <Icon name=\"user\" className=\"secondary-color\"/>\n                                    {userInfo.first_name}&nbsp;{userInfo.last_name}\n                                </div>\n                            </div>\n                        </div>\n                        <PicksDashboard />\n                    </>\n                ) : (\n                    <div className=\"no-games-set secondary-color\">\n                        No Picks for this user.\n                    </div>\n                )\n            }\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.jsx",["242"],"import React, {useState} from 'react';\nimport { of } from 'rxjs';\nimport { SET_THEME } from '../../configs/topics';\nimport { Subscriber } from '../../utils/pubSub';\n\nexport const ThemeSwitcher = () => {\n    const [theme, setTheme] = useState(localStorage.getItem('theme') === null ? \"light\" : localStorage.getItem('theme'));\n\n    const setNewTheme = (data) => {\n        if(data !== null) {\n            setTheme(data);\n        }\n    }\n\n    return (\n        <>\n            <Subscriber topic={SET_THEME}>\n                {data => (<>{setNewTheme(data)}</>)}\n            </Subscriber>\n            <link rel=\"stylesheet\" href={\"assets/themes/\" + theme + \"/styles-\" + theme + \".css\"} />\n        </>\n    ) \n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.jsx",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":35,"column":5,"nodeType":"249","endLine":35,"endColumn":7,"suggestions":"250"},{"ruleId":"247","severity":1,"message":"251","line":206,"column":8,"nodeType":"249","endLine":206,"endColumn":50,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":25,"column":9,"nodeType":"255","messageId":"256","endLine":25,"endColumn":95},{"ruleId":"247","severity":1,"message":"257","line":98,"column":8,"nodeType":"249","endLine":98,"endColumn":87,"suggestions":"258"},{"ruleId":"247","severity":1,"message":"259","line":120,"column":8,"nodeType":"249","endLine":120,"endColumn":56,"suggestions":"260"},{"ruleId":"247","severity":1,"message":"261","line":118,"column":7,"nodeType":"249","endLine":118,"endColumn":9,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":16},{"ruleId":"263","severity":1,"message":"267","line":6,"column":18,"nodeType":"265","messageId":"266","endLine":6,"endColumn":22},{"ruleId":"247","severity":1,"message":"268","line":59,"column":8,"nodeType":"249","endLine":59,"endColumn":50,"suggestions":"269"},{"ruleId":"263","severity":1,"message":"270","line":3,"column":31,"nodeType":"265","messageId":"266","endLine":3,"endColumn":38},{"ruleId":"243","replacedBy":"271"},{"ruleId":"245","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":7,"column":30,"nodeType":"275","messageId":"276","endLine":7,"endColumn":32},{"ruleId":"273","severity":1,"message":"274","line":12,"column":33,"nodeType":"275","messageId":"276","endLine":12,"endColumn":35},{"ruleId":"263","severity":1,"message":"277","line":2,"column":10,"nodeType":"265","messageId":"266","endLine":2,"endColumn":12},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["280"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["281"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'other'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'currWeek', 'other', and 'setWeek'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'stagedPicks'. Either include it or remove the dependency array.",["284"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'leagueState'. Either include it or remove the dependency array.",["285"],"'Segment' is defined but never used.",["278"],["279"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'of' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [dispatch]",{"range":"298","text":"299"},"Update the dependencies array to be: [tokenState, username, password, dispatch, history]",{"range":"300","text":"301"},"Update the dependencies array to be: [gamesState, leagueState, currSeason, currWeek, currSeasonType, dispatch, user, other]",{"range":"302","text":"303"},"Update the dependencies array to be: [dispatch, user, season, week, seasonType, view, currWeek, setWeek, other]",{"range":"304","text":"305"},"Update the dependencies array to be: [stagedPicks]",{"range":"306","text":"307"},"Update the dependencies array to be: [announcementsStatus, userState, dispatch, leagueState]",{"range":"308","text":"309"},[1241,1243],"[dispatch]",[6948,6990],"[tokenState, username, password, dispatch, history]",[4193,4272],"[gamesState, leagueState, currSeason, currWeek, currSeasonType, dispatch, user, other]",[5117,5165],"[dispatch, user, season, week, seasonType, view, currWeek, setWeek, other]",[5620,5622],"[stagedPicks]",[2357,2399],"[announcementsStatus, userState, dispatch, leagueState]"]