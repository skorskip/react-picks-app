[{"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.tsx":"1","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.ts":"2","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.ts":"3","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.tsx":"4","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.ts":"5","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.ts":"6","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.ts":"7","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.ts":"8","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.ts":"9","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.ts":"10","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.ts":"11","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.ts":"12","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.tsx":"13","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.tsx":"14","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.tsx":"15","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.tsx":"16","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/endpoints.ts":"17","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.ts":"18","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/localData.ts":"19","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.ts":"20","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/announcement/announcement.ts":"21","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.ts":"22","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.ts":"23","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.tsx":"24","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.tsx":"25","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.tsx":"26","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.ts":"27","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.tsx":"28","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.tsx":"29","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.tsx":"30","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.tsx":"31","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/dateRequest.ts":"32","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.tsx":"33","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.ts":"34","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.ts":"35","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickRequest.ts":"36","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickDeleteRequest.ts":"37","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.tsx":"38","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader/standings-loader.tsx":"39","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.tsx":"40","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/game-card.tsx":"41","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pickSelected/pickSelected.ts":"42","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/seasonRequest.ts":"43","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.ts":"44","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.tsx":"45","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.tsx":"46","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/pubSub/pubSubSlice.ts":"47","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/tools.ts":"48","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/week/weekSlice.ts":"49","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/pick.ts":"50","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/game.ts":"51","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/team.ts":"52","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/profile-image/profile-image.tsx":"53","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/picksUser/picksUser.ts":"54","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/users-pick-data/users-pick-data.tsx":"55","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-staus/pick-status.tsx":"56","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/team-card/team-card.tsx":"57","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-submit-time/game-submit-time.tsx":"58","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/common/PickButton/PickButton.tsx":"59","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/game-dashboard/game-dashboard.tsx":"60","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/others-dashboard/others-dashboard.tsx":"61","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/picks-dashboard/picks-dashboard.tsx":"62","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/components/themes.tsx":"63","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/reminderRequest.ts":"64","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/dashboard.tsx":"65","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/components/schedule/schedule.tsx":"66","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/components/hot-streak/hot-streak.tsx":"67","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-mini/pick-mini.tsx":"68","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/standings-user-card/standings-user-card.tsx":"69"},{"size":619,"mtime":1664931641359,"results":"70","hashOfConfig":"71"},{"size":436,"mtime":1664931641371,"results":"72","hashOfConfig":"71"},{"size":1505,"mtime":1664931641372,"results":"73","hashOfConfig":"71"},{"size":2307,"mtime":1664931641315,"results":"74","hashOfConfig":"71"},{"size":444,"mtime":1664931641316,"results":"75","hashOfConfig":"71"},{"size":1661,"mtime":1691519780732,"results":"76","hashOfConfig":"71"},{"size":7399,"mtime":1691248838545,"results":"77","hashOfConfig":"71"},{"size":1391,"mtime":1664931641354,"results":"78","hashOfConfig":"71"},{"size":2742,"mtime":1664931641349,"results":"79","hashOfConfig":"71"},{"size":3221,"mtime":1688427535363,"results":"80","hashOfConfig":"71"},{"size":2138,"mtime":1664931641352,"results":"81","hashOfConfig":"71"},{"size":1148,"mtime":1664931641345,"results":"82","hashOfConfig":"71"},{"size":1867,"mtime":1664931641323,"results":"83","hashOfConfig":"71"},{"size":908,"mtime":1664931641341,"results":"84","hashOfConfig":"71"},{"size":3049,"mtime":1688427535382,"results":"85","hashOfConfig":"71"},{"size":1736,"mtime":1664931641322,"results":"86","hashOfConfig":"71"},{"size":2217,"mtime":1689718834855,"results":"87","hashOfConfig":"71"},{"size":2863,"mtime":1664931641372,"results":"88","hashOfConfig":"71"},{"size":3230,"mtime":1664931641374,"results":"89","hashOfConfig":"71"},{"size":1424,"mtime":1664931641373,"results":"90","hashOfConfig":"71"},{"size":510,"mtime":1664931641360,"results":"91","hashOfConfig":"71"},{"size":391,"mtime":1664931641348,"results":"92","hashOfConfig":"71"},{"size":1395,"mtime":1688427535369,"results":"93","hashOfConfig":"71"},{"size":3337,"mtime":1664931641341,"results":"94","hashOfConfig":"71"},{"size":10451,"mtime":1664931641386,"results":"95","hashOfConfig":"71"},{"size":6556,"mtime":1691519810430,"results":"96","hashOfConfig":"71"},{"size":301,"mtime":1664931641344,"results":"97","hashOfConfig":"71"},{"size":6444,"mtime":1688427543600,"results":"98","hashOfConfig":"71"},{"size":2772,"mtime":1688427535385,"results":"99","hashOfConfig":"71"},{"size":2252,"mtime":1664931641376,"results":"100","hashOfConfig":"71"},{"size":7609,"mtime":1693096817855,"results":"101","hashOfConfig":"71"},{"size":161,"mtime":1664931641364,"results":"102","hashOfConfig":"71"},{"size":1564,"mtime":1664931641329,"results":"103","hashOfConfig":"71"},{"size":1642,"mtime":1664931641346,"results":"104","hashOfConfig":"71"},{"size":2279,"mtime":1688427535367,"results":"105","hashOfConfig":"71"},{"size":608,"mtime":1664931641365,"results":"106","hashOfConfig":"71"},{"size":524,"mtime":1664931641364,"results":"107","hashOfConfig":"71"},{"size":7318,"mtime":1664931641334,"results":"108","hashOfConfig":"71"},{"size":639,"mtime":1664931641388,"results":"109","hashOfConfig":"71"},{"size":1058,"mtime":1664931641320,"results":"110","hashOfConfig":"71"},{"size":4613,"mtime":1688427535352,"results":"111","hashOfConfig":"71"},{"size":222,"mtime":1664931641362,"results":"112","hashOfConfig":"71"},{"size":359,"mtime":1664931641366,"results":"113","hashOfConfig":"71"},{"size":2645,"mtime":1688427543599,"results":"114","hashOfConfig":"71"},{"size":3691,"mtime":1664931641379,"results":"115","hashOfConfig":"71"},{"size":3142,"mtime":1688427543599,"results":"116","hashOfConfig":"71"},{"size":1082,"mtime":1664931641353,"results":"117","hashOfConfig":"71"},{"size":811,"mtime":1688427535370,"results":"118","hashOfConfig":"71"},{"size":10510,"mtime":1688427543598,"results":"119","hashOfConfig":"71"},{"size":749,"mtime":1664931641368,"results":"120","hashOfConfig":"71"},{"size":1283,"mtime":1664931641367,"results":"121","hashOfConfig":"71"},{"size":895,"mtime":1664931641369,"results":"122","hashOfConfig":"71"},{"size":1150,"mtime":1664931641338,"results":"123","hashOfConfig":"71"},{"size":636,"mtime":1642452244845,"results":"124","hashOfConfig":"71"},{"size":4986,"mtime":1688427543597,"results":"125","hashOfConfig":"71"},{"size":1565,"mtime":1664931641336,"results":"126","hashOfConfig":"71"},{"size":2951,"mtime":1688427543644,"results":"127","hashOfConfig":"71"},{"size":3367,"mtime":1693095927062,"results":"128","hashOfConfig":"71"},{"size":1564,"mtime":1688427543596,"results":"129","hashOfConfig":"71"},{"size":5269,"mtime":1664931641382,"results":"130","hashOfConfig":"71"},{"size":4789,"mtime":1664931641383,"results":"131","hashOfConfig":"71"},{"size":7111,"mtime":1688427543600,"results":"132","hashOfConfig":"71"},{"size":1777,"mtime":1691247116053,"results":"133","hashOfConfig":"71"},{"size":232,"mtime":1664931641365,"results":"134","hashOfConfig":"71"},{"size":6894,"mtime":1688427535376,"results":"135","hashOfConfig":"71"},{"size":5606,"mtime":1688427535374,"results":"136","hashOfConfig":"71"},{"size":1081,"mtime":1688427535373,"results":"137","hashOfConfig":"71"},{"size":2468,"mtime":1688484146681,"results":"138","hashOfConfig":"71"},{"size":4142,"mtime":1688427535356,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1ayhqcp",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"142"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"142"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.tsx",[],["286","287"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.tsx",["288"],"import React from 'react';\nimport { Home } from './views/home/home';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchToken } from './controller/token/tokenSlice';\nimport { PickLoader } from './components/pick-loader/pick-loader';\nimport './App.scss';\nimport { useEffect } from 'react';\nimport { fetchLeague } from './controller/league/leagueSlice';\nimport { status } from './configs/status';\nimport { MessagePopup, SnackMessage } from './components/message/messagePopup';\nimport { ThemeSwitcher } from './components/theme-switcher/theme-switcher';\nimport { RootState } from './store';\nimport { publish, PubSub } from './controller/pubSub/pubSubSlice';\nimport { SHOW_MESSAGE } from './configs/topics';\nimport { fetchUser } from './controller/user/userSlice';\n\nAmplify.configure({...awsconfig, ssr: true});\n\nfunction App() {\n\n  const tokenState = useSelector((state: RootState) => state.token.status)\n  const userState = useSelector((state: RootState) => state.user.status)\n  const leagueState = useSelector((state: RootState) => state.league.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(userState === status.IDLE && \n      tokenState === status.COMPLETE) {\n      dispatch(fetchUser());\n    }\n  }, [userState, tokenState, dispatch]);\n\n  useEffect(() => {\n    if(userState === status.COMPLETE && \n      tokenState === status.COMPLETE && \n      leagueState === status.IDLE) {\n\n      dispatch(fetchLeague());\n    }\n  }, [userState, tokenState, dispatch, leagueState]);\n\n  useEffect(() => {dispatch(fetchToken())}, []);\n\n  useEffect(() => {\n    if(leagueState === status.ERROR) {\n      let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n      dispatch(publish(request))\n    }\n  }, [leagueState, dispatch])\n\n  if(userState === status.LOADING || \n    leagueState === status.LOADING) {\n    return (\n      <div className=\"loader-container\">\n        <ThemeSwitcher />\n        <PickLoader />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeSwitcher />\n      <Router>\n        <Home />\n        <MessagePopup />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/endpoints.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/localData.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/announcement/announcement.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.tsx",["289"],"import React, { useEffect, useState } from 'react'\nimport { PickLogo } from '../../components/pick-logo/pick-logo'\nimport './login.css'\nimport { Form, Input, Button, Message,Icon } from 'semantic-ui-react'\nimport { fetchUser, login, createPassword, resetPassword, forgotPassword } from '../../controller/user/userSlice'\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AmplifyEnum } from '../../utils/amplifyAuth';\nimport { fetchToken } from '../../controller/token/tokenSlice';\nimport { status } from '../../configs/status'\nimport { RootState } from '../../store'\nimport { publish, PubSub } from '../../controller/pubSub/pubSubSlice'\nimport { SHOW_MESSAGE } from '../../configs/topics'\nimport { SnackMessage } from '../../components/message/messagePopup'\n\nexport const Login = () => {\n    const formInfo = {\n        username: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\",\n        code: \"\"\n    }\n\n    let { search } = useLocation();\n    let history = useHistory();\n    const query = new URLSearchParams(search);\n    const loginType = query.get(\"type\");\n    const [title, setTitle] = useState('pickem');\n    const [completeLoginForm, setCompleteLoginForm] = useState(false);\n    const [forgotPasswordForm, setForgotPasswordForm] = useState(loginType !== null ? loginType===\"newpassword\" : false);\n    const [passwordIncorrect, setPasswordIncorrect] = useState(false);\n    const [passwordMismatch, setPasswordMismatch] = useState(false);\n    const [emptyUsername, setEmptyUsername] = useState(false);\n    const [formData, setFormData] = useState(formInfo);\n    const [laoder, setLoader] = useState(false);\n    const tokenState = useSelector((state: RootState) => state.token.status);\n    const [password, setPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const userState = useSelector((state: RootState) => state.user.status);\n    const dispatch = useDispatch();\n\n    const handleChange = (event: { target: { name: any; value: any } }) => {\n        setFormData({\n            ...formData,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    const completeForgotPassword = () => {\n        setPasswordMismatch(formData.password !== formData.confirmPassword);\n\n        if(formData.password !== '' && formData.password === formData.confirmPassword) {\n            resetPassword(formData.username, formData.password, formData.code).then((result) => {\n\n                if(result.status === status.ERROR) {\n                    let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.USER.PASSWORD_ERROR));\n                    dispatch(publish(request));\n                }\n\n                setLoader(false);\n                setToken();\n                setForgotPasswordForm(false);\n\n                let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.USER.PASSWORD_SUCCESS));\n                dispatch(publish(request));\n            });\n        }\n    }\n\n    const completeLogin = () => {\n        setPasswordMismatch(formData.newPassword !== formData.confirmPassword);\n        \n        if(formData.password !== '' && formData.newPassword === formData.confirmPassword) {\n            \n            createPassword(formData.username, formData.password, formData.newPassword).then((result) => {\n\n                if(result.status === status.ERROR) {\n                    let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.USER.PASSWORD_ERROR));\n                    dispatch(publish(request));\n                }\n\n                setLoader(false);\n                setToken();\n                setCompleteLoginForm(false);\n\n                let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.USER.PASSWORD_SUCCESS));\n                dispatch(publish(request));     \n            });\n        }\n    }\n\n    const authorize = () => {\n        login(formData.username, formData.password).then((result) => {\n            setLoader(false);\n            if(result.error === AmplifyEnum.inValidUser) {\n                setPasswordIncorrect(true);\n            } else if(result.response.challengeName != null && \n                result.response.challengeName === AmplifyEnum.needNewPassword) {\n                    \n                setTitle('Welcome!');\n                setCompleteLoginForm(true);\n            } else {\n                setToken();\n            } \n        });\n    }\n    \n    const setToken = () => {\n        dispatch(fetchToken());\n        setUsername(formData.username);\n        setPassword(formData.password);\n    }\n\n    const attemptLogin = (event: { preventDefault: () => void }) => {\n        event.preventDefault();\n        setLoader(true);\n        if(formData.username === '') {\n            setLoader(false);\n            setEmptyUsername(true);\n        } else {\n            if(forgotPasswordForm) {\n                completeForgotPassword();\n            } else if(completeLoginForm) {\n                completeLogin();\n            } else {\n                authorize();\n            }\n        }\n    }\n\n    const showForgotPassword = () => {\n        if(formData.username !== '') {\n            setPasswordIncorrect(false);\n            setEmptyUsername(false);\n            setFormData({...formData, password: ''});\n            setForgotPasswordForm(true);\n            setTitle('Whoops...');\n            forgotPassword(formData.username).then(result => {\n                if(result.status === status.ERROR) {\n                    let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.USER.PASSWORD_ERROR));\n                    dispatch(publish(request));\n                }\n\n                let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.USER.PASSCODE_SUCCESS));\n                dispatch(publish(request));\n            });\n        } else {\n            setEmptyUsername(true);\n        }\n    }\n\n    const usernameForm = !completeLoginForm && (\n        <Form.Field\n            control={Input}\n            name=\"username\"\n            placeholder=\"Username/Email\"\n            type=\"text\"\n            icon='user'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.username}\n            className=\"loginInput\"\n            error={(emptyUsername && {\n                content: 'Must provide username or email',\n                pointing: 'above'\n            }) || passwordIncorrect}\n        />\n    );\n\n    const codeForm = forgotPasswordForm && (\n        <Form.Field \n            control={Input}\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"Verification code\"\n            icon='key'\n            iconPosition='left'\n            className=\"loginInput\"\n            onChange={handleChange}\n            value={formData.code}\n        />\n    );\n\n    const passwordForm = !completeLoginForm &&(\n        <Form.Field\n            control={Input}\n            name='password'\n            placeholder={forgotPasswordForm ? \"New Password\" : \"Password\"}\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            className=\"loginInput\"\n            onChange={handleChange} \n            value={formData.password}\n            error={passwordIncorrect && {\n                content: 'Username or password incorrect',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    const newPasswordForm = completeLoginForm && (\n        <Form.Field\n            control={Input}\n            name='newPassword'\n            placeholder='New Password'\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            className=\"loginInput\"\n            onChange={handleChange} \n            value={formData.newPassword}\n            error={passwordIncorrect && {\n                content: 'Username or password incorrect',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    const passwordConfirmForm = (forgotPasswordForm || completeLoginForm) && (\n        <Form.Field\n            control={Input}\n            name='confirmPassword'\n            placeholder='Confirm password'\n            type='password'\n            icon='lock'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.confirmPassword}\n            className=\"loginInput\"\n            error={passwordMismatch && { \n                content: 'Passwords do not match.',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    useEffect(() => {\n        if(tokenState === status.COMPLETE && username !== '' && password !== '') {\n            dispatch(fetchUser());\n            history.push(\"/\");\n        }\n    }, [tokenState, username, password, dispatch, history]);\n\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"loginHeader\">\n                <div>\n                    <PickLogo sizeParam=\"'m'\"></PickLogo>\n                </div>\n                <div className=\"loginTitle secondary-color\">\n                    {title}\n                </div>\n                { forgotPasswordForm && \n                <Message warning>\n                    <Icon name='info circle'/>\n                    Check your email for a code.\n                </Message> }\n                { completeLoginForm && \n                <Message warning>\n                    <Icon name='info circle'/>\n                    Create a new password.\n                </Message> }\n                <Form onSubmit={attemptLogin} className=\"loginForm\" size='big'>\n                    { usernameForm }\n                    { codeForm }\n                    { passwordForm }\n                    { newPasswordForm }\n                    { passwordConfirmForm }\n\n                    {laoder ? \n                        <Button loading size=\"huge\" className=\"loginButton primary-background base-color noSelect\">Loading</Button>:\n                        <Button content=\"Login\" type=\"submit\" size=\"huge\" className=\"loginButton primary-background base-color noSelect\" />\n                    }\n                </Form>\n                <br></br>\n                <div className=\"forgot-password-link secondary-color\">\n                    Forgot Password? &nbsp;<div className=\"link\" onClick={showForgotPassword}>Reset here.</div>\n                </div>\n            </div>\n        </div>  \n    );\n} \n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/dateRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickDeleteRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader/standings-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/game-card.tsx",["290"],"import { useEffect, useState } from 'react';\nimport { TeamCard } from '../team-card/team-card';\nimport { PickStatus } from '../pick-staus/pick-status';\nimport { Icon } from 'semantic-ui-react';\nimport { GameWinStatusEnum, GameStatusEnum, Game } from '../../model/week/game';\nimport { Pick } from '../../model/week/pick';\nimport { Team, TeamSelect } from '../../model/week/team';\nimport { PickSelected } from '../../model/pickSelected/pickSelected';\nimport { User } from '../../model/user/user';\nimport './game-card.css';\nimport { gameTimeStatusQuarters } from '../../utils/dateFormatter';\nimport { PickButton } from '../../common/PickButton/PickButton';\nimport { pickResult } from '../../utils/tools';\n\ntype Props = {\n    game: Game,\n    pick: Pick | undefined,\n    user: User,\n    disabled: boolean,\n    editMode: boolean,\n    remove: boolean,\n    showSubmitTime: boolean,\n    homeTeam: Team,\n    awayTeam: Team,\n    onTeamSelected: (selected: PickSelected) => void,\n    onDeleteClicked: () => void\n}\n\nexport const GameCard = ({\n    game,\n    pick,\n    user,\n    disabled,\n    editMode,\n    remove,\n    homeTeam,\n    awayTeam,\n    onTeamSelected,\n    onDeleteClicked }: Props) => {\n\n    const [highlightHome, setHighlightHome] = useState(false);\n    const [highlightAway, setHighlightAway] = useState(false);\n    const gameLocked = new Date(game?.pick_submit_by_date) <= new Date();\n\n    const fillTeam = (teamId: number): boolean => {\n        return teamId === game.winning_team_id;\n    }\n\n    const teamSelected = (event: TeamSelect) => {\n        let selectedPick = new Pick(0, user.user_id, game.game_id, event.team.team_id, game.pick_submit_by_date);\n        let pickOpt = new PickSelected(event.highlight, selectedPick);\n\n        if(editMode) {\n            if(event.highlight) {\n                setHighlightAway(!highlightAway);\n                setHighlightHome(!highlightHome);\n                pickOpt.highlight = true;\n                pickOpt.pick.pick_id = pick ? pick.pick_id : 0;\n                onTeamSelected(pickOpt);\n            }\n        } else if(event.team.team_id === awayTeam.team_id) {\n            if(event.highlight) setHighlightHome(false);\n            setHighlightAway(event.highlight);\n            onTeamSelected(pickOpt);\n        } else {\n            if(event.highlight) setHighlightAway(false);\n            setHighlightHome(event.highlight);\n            onTeamSelected(pickOpt);\n        }\n    }\n\n    const deleteButton = (editMode && !gameLocked && !remove) && (\n        <PickButton \n            styling=\"delete-button\" \n            type=\"failure\"\n            clickEvent={() => onDeleteClicked()}\n            content={\n                <>\n                    <Icon name= \"trash alternate outline\" />\n                    Delete\n                </>}\n        />\n    );\n\n    const timeStatus = (gameLocked && game.game_status !== GameStatusEnum.completed) && (\n        <div className=\"game-card-date\">\n            <div className=\"date-text accent\">\n                <Icon className=\"primary-color\" name=\"stopwatch\"/>\n                { gameTimeStatusQuarters(game) }\n            </div>\n        </div>\n    );\n\n    useEffect(() => {\n        if(pick != null && game != null) {\n            setHighlightHome(game.home_team_id === pick.team_id)\n            setHighlightAway(game.away_team_id === pick.team_id)\n        }\n    }, [pick, game]);\n\n    return (\n        <>\n            {timeStatus}\n            <div className=\"team-group secondary-color\">\n                <TeamCard \n                    team={awayTeam}\n                    score={game.away_team_score}\n                    highlight={highlightAway}\n                    locked={gameLocked}\n                    fill={fillTeam(game.away_team_id)}\n                    disabled={disabled}\n                    onTeamSelected={teamSelected}\n                    size={null}\n                    spread={null}\n                />\n                <PickStatus\n                    submitTime={game?.pick_submit_by_date}\n                    pickSuccess={pickResult(game, pick)}\n                    gameStatus={game?.game_status}\n                />\n                <TeamCard \n                    team={homeTeam}\n                    score={game.home_team_score}\n                    highlight={highlightHome}\n                    locked={gameLocked}\n                    fill={fillTeam(game.home_team_id)}\n                    spread={game.home_spread}\n                    disabled={disabled}\n                    onTeamSelected={teamSelected}\n                    size={null}\n                />\n            </div>\n            { deleteButton }\n        </>\n    )\n\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pickSelected/pickSelected.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/seasonRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/pubSub/pubSubSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/tools.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/week/weekSlice.ts",["291"],"import {  createSlice, createEntityAdapter, createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { client } from '../../utils/client'\nimport { endpoints } from '../../configs/endpoints';\nimport { status } from '../../configs/status';\nimport { Game, GameStatusEnum } from '../../model/week/game';\nimport { Team } from '../../model/week/team';\nimport { SeasonRequest } from '../../model/postRequests/seasonRequest';\nimport { RootState } from '../../store';\nimport { Pick, PickSubmitEnum } from '../../model/week/pick';\nimport { PicksUserData } from '../../model/week/picksUserData';\nimport { PickRequest } from '../../model/postRequests/pickRequest';\nimport { PickDeleteRequest } from '../../model/postRequests/pickDeleteRequest';\nimport { publish, PubSub } from '../pubSub/pubSubSlice';\nimport { SnackMessage } from '../../components/message/messagePopup';\nimport { SHOW_MESSAGE } from '../../configs/topics';\n\nconst getMessageFromError = (error: any) => {\n    let message = error?.message;\n    switch (message) {\n        case PickSubmitEnum.PASS_SUBMIT_DATE :\n            return status.MESSAGE.PICKS.PASS_SUBMIT_DATE;\n        case PickSubmitEnum.TOO_MANY_PICKS :\n            let message = status.MESSAGE.PICKS.TOO_MANY_PICKS(error.data.over, error.data.limit);\n            return message;\n        case PickSubmitEnum.NO_PICKS : \n            return status.MESSAGE.PICKS.NO_PICKS;\n        case PickSubmitEnum.NOT_ALLOWED :\n            return status.MESSAGE.PICKS.NOT_ALLOWED;\n        default :\n            return null;\n    }\n}\n\nconst weekAdapter = createEntityAdapter();\nconst genericError = new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC);\n\nconst initialState = weekAdapter.getInitialState({\n    status: status.IDLE,\n    picksStatus: status.IDLE,\n    setWeek: null as number | null,\n    message: \"\" as string | null,\n    games: [] as Game[],\n    teams: [] as Team[],\n    picks: [] as Pick[],\n    userPicks: [] as PicksUserData[]\n});\n\nexport const fetchWeek = createAsyncThunk('week/fetchGames',  async (param: SeasonRequest, {dispatch}) => {\n    try {\n        const url = endpoints.GAMES.WEEK(param);\n        const response = await client.get(url);\n        return { response: response, week: param.week };\n    } catch(error) {\n        console.error(error);\n        let request = new PubSub(SHOW_MESSAGE, genericError);\n        dispatch(publish(request));\n        return {status: status.ERROR, message: error, week: null}\n    }\n});\n\nexport const addPicks = createAsyncThunk('week/addPicks', async (param: PickRequest, {dispatch}) => {\n    try {\n        const url = endpoints.PICKS.ADD(param);\n        const response = await client.post(url, param.picks);\n\n        let message = new PubSub(SHOW_MESSAGE, \n            new SnackMessage(status.SUCCESS, status.MESSAGE.PICKS.ADD_SUCCESS));\n        dispatch(publish(message));\n\n        return response;\n    } catch(error) {\n        console.error(error);\n\n        let message = getMessageFromError(error);\n        \n        if(message) {\n            dispatch(resetWeekStatus());\n            alert(message);\n        } else {\n            let request = new PubSub(SHOW_MESSAGE, genericError);\n            dispatch(publish(request));\n        }\n\n        return {status: status.ERROR, message: error};\n    }\n});\n\nexport const updatePicks = createAsyncThunk('week/updatePicks', async (param: PickRequest, {dispatch}) => {\n    try {\n        const url = endpoints.PICKS.UPDATE;\n        const response = await client.post(url, param.picks);\n\n        let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.PICKS.EDIT_SUCCESS));\n        dispatch(publish(request)); \n\n        return response;\n    } catch(error) {\n        console.error(error);\n\n        let message = getMessageFromError(error);\n        \n        if(message) {\n            dispatch(resetWeekStatus());\n            alert(message);\n        } else {\n            let request = new PubSub(SHOW_MESSAGE, genericError);\n            dispatch(publish(request));\n        }\n\n        return {status: status.ERROR, message: error}\n    }\n});\n\nexport const deletePicks = createAsyncThunk('week/deletePicks', async (param: PickDeleteRequest, {dispatch}) => {\n    try {\n        const url = endpoints.PICKS.DELETE;\n        const response = await client.post(url, param.picks);\n\n        let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.PICKS.EDIT_SUCCESS));\n        dispatch(publish(request)); \n\n        return response;\n    } catch(error) {\n        console.error(error);\n\n        let message = getMessageFromError(error);\n        \n        if(message) {\n            dispatch(resetWeekStatus());\n            alert(message);\n        } else {\n            let request = new PubSub(SHOW_MESSAGE, genericError);\n            dispatch(publish(request));\n        }\n\n        return {status: status.ERROR, message: error}\n    }\n });\n\n export const deleteWeek = createAsyncThunk('week/deleteWeek',  async (param: PickRequest, {dispatch}) => {\n    try {\n        const url = endpoints.PICKS.DELETE_WEEK(param);\n        const response = await client.delete(url, {});\n        return { status: status.COMPLETE };\n    } catch(error) {\n        console.error(error);\n        let request = new PubSub(SHOW_MESSAGE, genericError);\n        dispatch(publish(request));\n        return {status: status.ERROR, message: error}\n    }\n});\n\n export const resetWeekStatus = createAction('week/resetStatus', function prepare() {\n    return {} as any\n});\n\nconst weekSlice = createSlice({\n    name: 'week',\n    initialState,\n    reducers: {},\n    extraReducers : (builder) => {\n        builder\n            .addCase(fetchWeek.fulfilled, (state, action) => {\n                if(action.payload?.status === status.ERROR) {\n                    state.status = status.ERROR;\n                } else {\n                    state.games = action.payload.response.games as Game[];\n                    state.teams = action.payload.response.teams as Team[];\n                    state.picks = action.payload.response.picks as Pick[];\n                    state.userPicks = action.payload.response.userPicks as PicksUserData[];\n                    state.setWeek = action.payload.week;\n                    state.status = status.COMPLETE;\n                }\n            })\n            .addCase(fetchWeek.pending, (state, action) => {\n                state.status = status.LOADING\n            })\n            .addCase(addPicks.pending, (state, action) => {\n                state.picksStatus = status.LOADING;\n            })\n            .addCase(addPicks.fulfilled, (state, action) => {\n                if(action.payload?.status !== status.ERROR) {\n                    state.picks = action.payload as Pick[];\n                    state.picksStatus = status.COMPLETE;\n                } else {\n                    state.picksStatus = status.ERROR;\n                }\n            })\n            .addCase(updatePicks.pending, (state, action) => {\n                state.picksStatus = status.LOADING;\n            })\n            .addCase(updatePicks.fulfilled, (state, action) => {\n                if(action.payload?.status !== status.ERROR) {\n                    state.picks = action.payload as Pick[];\n                    state.picksStatus = status.COMPLETE;\n                } else {\n                    state.picksStatus = status.ERROR;\n                }\n            })\n            .addCase(deletePicks.pending, (state, action) => {\n                state.picksStatus = status.LOADING;\n            })\n            .addCase(deletePicks.fulfilled, (state, action) => {\n                if(action.payload?.status !== status.ERROR) {\n                    state.picks = action.payload as Pick[];\n                    state.picksStatus = status.COMPLETE;\n                } else {\n                    state.picksStatus = status.ERROR;\n                }\n            })\n            .addCase(resetWeekStatus, (state, action) => {\n                state.status = status.COMPLETE;\n            })\n            .addCase(deleteWeek.pending, (state, action) => {\n                state.picksStatus = status.LOADING;\n            })\n            .addCase(deleteWeek.fulfilled, (state, action) => {\n                if(action.payload.status !== status.ERROR) {\n                    state.picks = [];\n                    state.picksStatus = status.COMPLETE;\n                } else {\n                    state.picksStatus = status.ERROR;\n                }\n            })\n    },\n});\n\nexport const selectGames = (state: RootState) => state.week.games as Game[]\n\nexport const selectGamesById = (state: RootState, gameId: number) => state.week.games.find((game: Game) => game.game_id === gameId) as Game;\n\nexport const selectGameIds = (state: RootState) => state.week.games.map((game: Game) => game.game_id) as number[];\n\nexport const selectGamesPastSubmit = (state: RootState) => state.week.games.find((game: Game) => new Date(game.pick_submit_by_date) < new Date()) as Game;\n\nexport const selectTeams = (state: RootState) => state.week.teams as Team[]\n\nexport const selectTeamById = (state: RootState, teamId: number) => state.week.teams.find((team: Team) => team.team_id === teamId) as Team;\n\nexport const selectPicks = (state: RootState) => state.week.picks;\n\nexport const selectPicksCount = (state: RootState) => state.week.picks.length as number;\n\nexport const selectGamesByIdNoPicks = (state: RootState) => \n    state.week.games.filter(week => !state.week.picks.map((pick: Pick) => \n        pick.game_id).includes(week.game_id)).map(game => \n            game.game_id) as number[];\n\nexport const selectGamesNoPicks = (state: RootState) => \n    state.week.games.filter(week => !state.week.picks.map((pick: Pick) => \n        pick.game_id).includes(week.game_id)) as Game[];\n\nexport const selectGamesPicks = (state: RootState) => \n    state.week.games.filter(week => state.week.picks.map((pick: Pick) => \n        pick.game_id).includes(week.game_id)) as Game[];\n\nexport const selectUserPickData = (state: RootState) => state.week.userPicks as PicksUserData[];\n\nexport const selectUserPickDataByGame = (state: RootState, gameId: number) => state.week.userPicks.filter(data => data.game_id === gameId) as PicksUserData[];\n\nexport const selectPicksMessage = (state: RootState) => state.week.message;\n\nexport const getSetWeek = (state: RootState) => state.week.setWeek;\n\nexport const selectGamesNotComplete = (state: RootState) => state.week.games.filter(game => game.game_status !== GameStatusEnum.completed);\n\nexport default weekSlice.reducer\n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/pick.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/game.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/week/team.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/profile-image/profile-image.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/picksUser/picksUser.ts",[],["292","293"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/users-pick-data/users-pick-data.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-staus/pick-status.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/team-card/team-card.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-submit-time/game-submit-time.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/common/PickButton/PickButton.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/game-dashboard/game-dashboard.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/others-dashboard/others-dashboard.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/sub-view/picks-dashboard/picks-dashboard.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/components/themes.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/reminderRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/dashboard.tsx",["294","295"],"import { useEffect, useState } from 'react';\nimport { Schedule } from './components/schedule/schedule';\nimport './dashboard.scss';\nimport { HotStreak } from './components/hot-streak/hot-streak';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { selectLeague } from '../../controller/league/leagueSlice';\nimport { fetchUserStandings, userStandingByCurrent } from '../../controller/user-standings/userStandingsSlice';\nimport { status } from '../../configs/status';\nimport { PickMini } from '../../components/pick-mini/pick-mini';\nimport { fetchWeek, selectGames, selectPicks, selectTeams, getSetWeek, selectUserPickData } from '../../controller/week/weekSlice';\nimport { SeasonRequest } from '../../model/postRequests/seasonRequest';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport { useHistory } from 'react-router-dom';\nimport { fetchAnnouncements, selectAnnouncements } from '../../controller/announcements/announcementsSlice';\nimport { getAnnouncementCheckLocal, resetAnnouncementCheckLocal } from '../../utils/localData';\nimport { DateRequest } from '../../model/postRequests/dateRequest';\nimport { fetchBonusEligible, selectBonusEligible, selectUser } from '../../controller/user/userSlice';\nimport { StandingsUserCard } from '../../components/standings-user-card/standings-user-card';\nimport { UserStats } from '../../components/user-stats/user-stats';\n\nexport const Dashboard = () => {\n    const standingsStatus = useSelector((state: RootState) => state.userStandings.status);\n    const leagueStatus = useSelector((state: RootState) => state.league.status);\n    const league = useSelector(selectLeague);\n    const weekState = useSelector((state: RootState) => state.week.status);\n    const games = useSelector(selectGames);\n    const teams = useSelector(selectTeams);\n    const picks = useSelector(selectPicks);\n    const pickData = useSelector(selectUserPickData);\n    const announcementsStatus = useSelector((state:RootState) => state.announcements.status);\n    const messagesSelect = useSelector(selectAnnouncements);\n    const [messages, setMessages] = useState(messagesSelect.announcements);\n    const setWeek = useSelector((state: RootState) => getSetWeek(state));\n    const history = useHistory();\n    const bonusState = useSelector((state: RootState) => state.user.bonusState);\n    const bonusUsers = useSelector(selectBonusEligible);\n    const currentUser = useSelector(selectUser);\n    const standings = useSelector((state: RootState) => userStandingByCurrent(state, currentUser));\n    const dispatch = useDispatch();\n\n    const header = () => {\n        const today = new Date();\n        return (today.getHours() >= 12) ? (\n                <div className=\"title secondary-color\">\n                    Good Afternoon.\n                </div>\n            ) : (\n                <div className=\"title secondary-color\">\n                    Good Morning!\n                </div>\n            )\n    };\n\n    const clickNav = (location: string) => {\n        if(location === \"/announcements\") {\n            clickAnnouncements();\n        }\n        history.push(location)\n    }\n\n    const clickAnnouncements = () => {\n        setMessages(0);\n        resetAnnouncementCheckLocal();\n    }\n\n    const messageNotif = (messages > 0) && (\n        <Label color='red' attached=\"top right\" className=\"notif-icon\">\n            {messages}\n        </Label>\n    );\n\n    const standingCards = (standingsStatus === status.COMPLETE) && standings.map((standing) => {\n        return (\n            <StandingsUserCard\n                key={ standing.user_id + \"-standings-card\"}\n                standing={standing}\n                isCurrentUser={standing.user_id === currentUser.user_id}\n            />\n        )\n    });\n\n    useEffect(() => {\n        if(standingsStatus === status.IDLE && leagueStatus === status.COMPLETE) {\n            dispatch(fetchUserStandings({\n                season: league.currentSeason, \n                seasonType: league.currentSeasonType, \n                week: league.currentWeek\n            }));\n        }\n    }, [dispatch, standingsStatus, leagueStatus, league]);\n\n    useEffect(() => {\n        if((weekState === status.IDLE || setWeek !== league.currentWeek) && leagueStatus === status.COMPLETE) {\n            let request = new SeasonRequest(league.currentSeason, league.currentSeasonType, league.currentWeek);\n            dispatch(fetchWeek(request));\n        }\n    }, [weekState, leagueStatus, league, dispatch]);\n\n    useEffect(() => {\n        if(announcementsStatus === status.IDLE) {\n            const params = new DateRequest(getAnnouncementCheckLocal())\n            dispatch(fetchAnnouncements(params));\n        }\n    }, [announcementsStatus, dispatch]);\n\n    useEffect(() => {\n        if(messagesSelect.announcements > 0) {\n            setMessages(messagesSelect.announcements);\n        }\n    }, [messagesSelect]);\n\n    useEffect(() => {\n        if (bonusState === status.IDLE && leagueStatus === status.COMPLETE) {\n            let request = new SeasonRequest(league.currentSeason, league.currentSeasonType, league.currentWeek);\n            dispatch(fetchBonusEligible(request));\n        }\n    },[bonusState, bonusUsers, league, leagueStatus]);\n\n    useEffect(() => {\n        if(standingsStatus === status.IDLE) {\n            dispatch(fetchUserStandings({season: league.currentSeason, seasonType: league.currentSeasonType, week: league.currentWeek}));\n        }\n    }, [dispatch, standingsStatus, league]);\n\n    return (\n        <>\n            <div className='dashboard-header'>\n                {header()}\n                <Button icon basic className=\"nav-button\" onClick={() => clickNav(\"/announcements\")}>\n                    <div className=\"secondary-color\">\n                        <Icon size='large' name='bullhorn' className=\"nav-icon\"/>\n                        { messageNotif }\n                    </div>\n                </Button>\n            </div>\n            <div className=\"dashboard-content\">\n                <div className=\"user-stats\">\n                    <UserStats></UserStats>\n                </div>\n            </div>\n            <div className=\"dashboard-content\">\n                <div className=\"sub-title secondary-color\">Streak</div>\n                <HotStreak users={bonusUsers} pickData={pickData}/>\n            </div>\n            <div className=\"dashboard-content\">\n                <div className=\"sub-title secondary-color\">Picks</div>\n                <PickMini games={games} picks={picks} teams={teams}/>\n            </div>\n            <div className=\"dashboard-content\">\n                <div className=\"sub-title secondary-color\">Standings</div>\n                <div className=\"streak-standings\">\n                    { standingCards }\n                </div>\n            </div>\n            <Schedule games={games} picks={picks} teams={teams}></Schedule>\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/components/schedule/schedule.tsx",["296"],"\nimport React, { useEffect, useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { SemanticICONS } from 'semantic-ui-react/dist/commonjs/generic';\nimport { Game, GameStatusEnum } from '../../../../model/week/game';\nimport { Pick } from '../../../../model/week/pick';\nimport { Team } from '../../../../model/week/team';\nimport { formatDate } from '../../../../utils/dateFormatter';\nimport './schedule.css';\n\ntype Props = {\n    games: Array<Game>;\n    picks: Array<Pick>;\n    teams: Array<Team>;\n}\n\ninterface ScheduleCard {\n    type: string;\n    subTitle: string;\n    time: string;\n    title: string;\n    icon: SemanticICONS;\n}\n\nexport const Schedule = ({games, picks, teams} : Props) => {\n\n    const [schedules, setSchedule] = useState([] as ScheduleCard[]);\n    const [pickSchedules, setPickSchedules] = useState([] as ScheduleCard[]);\n    const [liveSchedules, setLiveSchedules] = useState([] as ScheduleCard[]);\n    const [submitSchedules, setSubmitSchedules] = useState([] as ScheduleCard[]);\n    const [filteredGames, setFilteredGames] = useState([] as Game[]);\n    const [eventDay, setEventDay] = useState(new Date());\n\n    useEffect(() => {\n        const currentGames = games.filter(game => game.game_status !== GameStatusEnum.completed);\n\n        if (!!currentGames.length) {\n            const firstGame = currentGames[0];\n            const gameDay = new Date(firstGame.start_time);\n            let filtered = currentGames.filter(game => {\n                console.log(new Date(game.start_time).getDate(), gameDay.getDate())\n                return new Date(game.start_time).getDate() === gameDay.getDate()\n            });\n            console.log(gameDay, filtered);\n            setEventDay(gameDay);\n            setFilteredGames(filtered);\n        }\n    }, [games]);\n\n    // Get Live Games\n    useEffect(() => {\n        const liveGames = filteredGames.filter(games => games.game_status === GameStatusEnum.live);\n        if (!!liveGames.length) {\n            const liveSchedule = {\n                type: 'secondary-color',\n                subTitle: `${liveGames.length} games`,\n                time: 'now',\n                title: 'Game(s) live',\n                icon: 'football ball'\n            } as ScheduleCard;\n    \n            setLiveSchedules([liveSchedule]);\n        }\n    }, [filteredGames]);\n\n    // Get Submit Times \n    useEffect(() => {\n        const unplayedGames = filteredGames.filter(games => games.game_status === GameStatusEnum.unplayed);\n        \n        let submitMap = {} as any;\n        unplayedGames.forEach(game => {\n            if (!submitMap[game.pick_submit_by_date]) { \n                submitMap[game.pick_submit_by_date] = []; \n            }\n            submitMap[game.pick_submit_by_date].push(game.game_id);\n        });\n        const keys = Object.keys(submitMap);\n        let unplayedSchedule = [] as ScheduleCard[];\n\n        keys.forEach((key: string) => {\n            unplayedSchedule.push({\n                type: 'warn-color',\n                subTitle: `${submitMap[key].length} games`,\n                time: new Date(key).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }),\n                title: 'Submit deadline(s)',\n                icon: 'clock'\n            });\n        });\n\n        setSubmitSchedules([...unplayedSchedule]);\n    }, [filteredGames]);\n\n    // Get Picked Games\n    useEffect(() => {\n        const pickGamesId = picks.map(pick => pick.game_id);\n        const pickGames = filteredGames.filter(game => pickGamesId.includes(game.game_id));\n        const pickSchedule = [] as ScheduleCard[];\n        pickGames.forEach(game => {\n            let awayTeam = teams.find(team => team.team_id === game.away_team_id);\n            let homeTeam = teams.find(team => team.team_id === game.home_team_id);\n            pickSchedule.push({\n                type: 'primary-color',\n                subTitle: `${awayTeam?.abbreviation} @ ${homeTeam?.abbreviation}`,\n                time: new Date(game.start_time).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }),\n                title: 'Pick',\n                icon: 'hand point down'\n            });\n        });\n        setPickSchedules([...pickSchedule]);\n    }, [filteredGames]);\n\n    useEffect(() => {\n        const schedules = [...pickSchedules, ...submitSchedules];\n        setSchedule([...liveSchedules, ...schedules.sort((a,b) => { if (a.time > b.time) {return 1;} else {return -1}})]);\n    }, [pickSchedules, liveSchedules, submitSchedules]);\n\n    // if(!!schedules && !!schedules.length) {\n    //     return (<><div>Empty</div></>)\n    // }\n\n    const schedulesDisplay = schedules.map((schedule,i) => {\n        return (\n            <div key={i + '-schedule-card'} className={'schedule-card ' + schedule.type}>\n                <div className='schedule-header'>\n                    <div className='schedule-topic secondary-color'>\n                        <Icon name={schedule.icon}/>\n                        {schedule.title}\n                    </div>\n                    <div className='schedule-subtopic secondary-color'>\n                        {schedule.subTitle}\n                    </div>\n                </div>\n                <div>\n                    {schedule.time}\n                </div>\n            </div>\n        );\n    })\n    \n    return (\n        <div className='schedule-container'>\n            <div className='sub-title secondary-color'>\n                {formatDate(eventDay, true)}\n            </div>\n            <div className='schedule'>\n                {schedulesDisplay}\n            </div>\n        </div>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/dashboard/components/hot-streak/hot-streak.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-mini/pick-mini.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/standings-user-card/standings-user-card.tsx",[],{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":45,"column":45,"nodeType":"303","endLine":45,"endColumn":47,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":40,"column":11,"nodeType":"307","messageId":"308","endLine":40,"endColumn":20},{"ruleId":"305","severity":1,"message":"309","line":5,"column":10,"nodeType":"307","messageId":"308","endLine":5,"endColumn":27},{"ruleId":"305","severity":1,"message":"310","line":143,"column":15,"nodeType":"307","messageId":"308","endLine":143,"endColumn":23},{"ruleId":"297","replacedBy":"311"},{"ruleId":"299","replacedBy":"312"},{"ruleId":"301","severity":1,"message":"313","line":98,"column":8,"nodeType":"303","endLine":98,"endColumn":51,"suggestions":"314"},{"ruleId":"301","severity":1,"message":"302","line":118,"column":7,"nodeType":"303","endLine":118,"endColumn":53,"suggestions":"315"},{"ruleId":"301","severity":1,"message":"316","line":110,"column":8,"nodeType":"303","endLine":110,"endColumn":23,"suggestions":"317"},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["320"],"@typescript-eslint/no-unused-vars","'userState' is assigned a value but never used.","Identifier","unusedVar","'GameWinStatusEnum' is defined but never used.","'response' is assigned a value but never used.",["318"],["319"],"React Hook useEffect has a missing dependency: 'setWeek'. Either include it or remove the dependency array.",["321"],["322"],"React Hook useEffect has missing dependencies: 'picks' and 'teams'. Either include them or remove the dependency array.",["323"],"no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [dispatch]",{"range":"332","text":"333"},"Update the dependencies array to be: [weekState, leagueStatus, league, dispatch, setWeek]",{"range":"334","text":"335"},"Update the dependencies array to be: [bonusState, bonusUsers, dispatch, league, leagueStatus]",{"range":"336","text":"337"},"Update the dependencies array to be: [filteredGames, picks, teams]",{"range":"338","text":"339"},[1688,1690],"[dispatch]",[4455,4498],"[weekState, leagueStatus, league, dispatch, setWeek]",[5189,5235],"[bonusState, bonusUsers, dispatch, league, leagueStatus]",[4228,4243],"[filteredGames, picks, teams]"]