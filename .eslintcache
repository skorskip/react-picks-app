[{"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.tsx":"1","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.ts":"2","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.ts":"3","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.tsx":"4","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.ts":"5","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.ts":"6","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks/picksSlice.ts":"7","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.ts":"8","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.ts":"9","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.ts":"10","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.ts":"11","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.ts":"12","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-details/userDetailsSlice.ts":"13","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-data/userPickDataSlice.ts":"14","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.ts":"15","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.ts":"16","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.tsx":"17","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.tsx":"18","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.tsx":"19","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.tsx":"20","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/endpoints.ts":"21","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.ts":"22","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/localData.ts":"23","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.ts":"24","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/announcement/announcement.ts":"25","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pick/pick.ts":"26","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.ts":"27","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.ts":"28","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.tsx":"29","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.tsx":"30","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.tsx":"31","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.ts":"32","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.tsx":"33","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.tsx":"34","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.tsx":"35","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.tsx":"36","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.tsx":"37","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard.tsx":"38","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/others-dashboard/others-dashboard.tsx":"39","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/dateRequest.ts":"40","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.tsx":"41","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.ts":"42","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.ts":"43","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickRequest.ts":"44","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickDeleteRequest.ts":"45","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard-wrapper.tsx":"46","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.tsx":"47","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-user-card/standings-user-card.tsx":"48","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader/standings-loader.tsx":"49","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.tsx":"50","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard-wrapper.tsx":"51","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.ts":"52","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/game-card.tsx":"53","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/pick-staus/pick-status.tsx":"54","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pickSelected/pickSelected.ts":"55","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/users-pick-data/users-pick-data.tsx":"56","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/team-card/team-card.tsx":"57","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/team/team.ts":"58","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/seasonRequest.ts":"59","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.ts":"60","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.tsx":"61","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.tsx":"62","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/pubSub/pubSubSlice.ts":"63"},{"size":714,"mtime":1631580272051,"results":"64","hashOfConfig":"65"},{"size":436,"mtime":1631580272064,"results":"66","hashOfConfig":"65"},{"size":1531,"mtime":1631580272064,"results":"67","hashOfConfig":"65"},{"size":2087,"mtime":1631580272021,"results":"68","hashOfConfig":"65"},{"size":444,"mtime":1631580272021,"results":"69","hashOfConfig":"65"},{"size":2564,"mtime":1631601211009,"results":"70","hashOfConfig":"65"},{"size":7074,"mtime":1631601900149,"results":"71","hashOfConfig":"65"},{"size":1661,"mtime":1631601876744,"results":"72","hashOfConfig":"65"},{"size":3679,"mtime":1631601756429,"results":"73","hashOfConfig":"65"},{"size":1391,"mtime":1631580272047,"results":"74","hashOfConfig":"65"},{"size":1808,"mtime":1631601858047,"results":"75","hashOfConfig":"65"},{"size":2017,"mtime":1631600855887,"results":"76","hashOfConfig":"65"},{"size":1752,"mtime":1631580623537,"results":"77","hashOfConfig":"65"},{"size":1907,"mtime":1631580794443,"results":"78","hashOfConfig":"65"},{"size":1896,"mtime":1631601890579,"results":"79","hashOfConfig":"65"},{"size":910,"mtime":1631580272039,"results":"80","hashOfConfig":"65"},{"size":1867,"mtime":1631580272031,"results":"81","hashOfConfig":"65"},{"size":898,"mtime":1631601836201,"results":"82","hashOfConfig":"65"},{"size":3169,"mtime":1631580272073,"results":"83","hashOfConfig":"65"},{"size":1694,"mtime":1631580272030,"results":"84","hashOfConfig":"65"},{"size":1261,"mtime":1631580272037,"results":"85","hashOfConfig":"65"},{"size":2863,"mtime":1631580272064,"results":"86","hashOfConfig":"65"},{"size":2347,"mtime":1631580272066,"results":"87","hashOfConfig":"65"},{"size":1424,"mtime":1631580272065,"results":"88","hashOfConfig":"65"},{"size":510,"mtime":1631580272052,"results":"89","hashOfConfig":"65"},{"size":717,"mtime":1631580272054,"results":"90","hashOfConfig":"65"},{"size":391,"mtime":1631580272041,"results":"91","hashOfConfig":"65"},{"size":1273,"mtime":1631580272067,"results":"92","hashOfConfig":"65"},{"size":4640,"mtime":1631580608756,"results":"93","hashOfConfig":"65"},{"size":10710,"mtime":1631601772112,"results":"94","hashOfConfig":"65"},{"size":6400,"mtime":1631580272072,"results":"95","hashOfConfig":"65"},{"size":301,"mtime":1631580272038,"results":"96","hashOfConfig":"65"},{"size":7055,"mtime":1631580783267,"results":"97","hashOfConfig":"65"},{"size":2708,"mtime":1631580272098,"results":"98","hashOfConfig":"65"},{"size":2222,"mtime":1631580272067,"results":"99","hashOfConfig":"65"},{"size":5649,"mtime":1631580272074,"results":"100","hashOfConfig":"65"},{"size":5377,"mtime":1631580272068,"results":"101","hashOfConfig":"65"},{"size":4998,"mtime":1631580272070,"results":"102","hashOfConfig":"65"},{"size":3620,"mtime":1631600828293,"results":"103","hashOfConfig":"65"},{"size":161,"mtime":1631602097403,"results":"104","hashOfConfig":"65"},{"size":1564,"mtime":1631580272032,"results":"105","hashOfConfig":"65"},{"size":1642,"mtime":1631580272040,"results":"106","hashOfConfig":"65"},{"size":1721,"mtime":1631580272066,"results":"107","hashOfConfig":"65"},{"size":552,"mtime":1631580272059,"results":"108","hashOfConfig":"65"},{"size":524,"mtime":1631580272058,"results":"109","hashOfConfig":"65"},{"size":2547,"mtime":1631601979499,"results":"110","hashOfConfig":"65"},{"size":6993,"mtime":1631580272033,"results":"111","hashOfConfig":"65"},{"size":3474,"mtime":1631601172698,"results":"112","hashOfConfig":"65"},{"size":639,"mtime":1631580272075,"results":"113","hashOfConfig":"65"},{"size":861,"mtime":1631580272030,"results":"114","hashOfConfig":"65"},{"size":1810,"mtime":1631601941424,"results":"115","hashOfConfig":"65"},{"size":2072,"mtime":1631580272053,"results":"116","hashOfConfig":"65"},{"size":5763,"mtime":1631580272028,"results":"117","hashOfConfig":"65"},{"size":1571,"mtime":1631580272024,"results":"118","hashOfConfig":"65"},{"size":222,"mtime":1631580272055,"results":"119","hashOfConfig":"65"},{"size":5036,"mtime":1631601025584,"results":"120","hashOfConfig":"65"},{"size":3181,"mtime":1631580272025,"results":"121","hashOfConfig":"65"},{"size":895,"mtime":1631580272060,"results":"122","hashOfConfig":"65"},{"size":307,"mtime":1631580272059,"results":"123","hashOfConfig":"65"},{"size":930,"mtime":1631580272061,"results":"124","hashOfConfig":"65"},{"size":3612,"mtime":1631580272071,"results":"125","hashOfConfig":"65"},{"size":3154,"mtime":1631580272069,"results":"126","hashOfConfig":"65"},{"size":1096,"mtime":1631580272045,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},"1auim8e",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"131"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"131"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"131"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"131"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"131"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.tsx",["262"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css'\nimport { IfStatement } from '@babel/types';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(undefined);\n",["263","264"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.tsx",["265"],"import React from 'react';\nimport { Home } from './views/home/home';\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchToken } from './controller/token/tokenSlice';\nimport { PickLoader } from './components/pick-loader/pick-loader';\nimport './App.scss';\nimport { useEffect } from 'react';\nimport { fetchLeague } from './controller/league/leagueSlice';\nimport { status } from './configs/status';\nimport { MessagePopup, SnackMessage } from './components/message/messagePopup';\nimport { ThemeSwitcher } from './components/theme-switcher/theme-switcher';\nimport { RootState } from './store';\nimport { publish, PubSub } from './controller/pubSub/pubSubSlice';\nimport { SHOW_MESSAGE } from './configs/topics';\n\nAmplify.configure({...awsconfig, ssr: true});\n\nfunction App() {\n\n  const tokenState = useSelector((state: RootState) => state.token.status)\n  const userState = useSelector((state: RootState) => state.user.status)\n  const leagueState = useSelector((state: RootState) => state.league.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(userState === status.COMPLETE && \n      tokenState === status.COMPLETE && \n      leagueState === status.IDLE) {\n\n      dispatch(fetchLeague());\n    }\n  }, [userState, tokenState, dispatch, leagueState]);\n\n  useEffect(() => {\n    dispatch(fetchToken());\n  },[]);\n\n  useEffect(() => {\n    if(leagueState === status.ERROR) {\n      let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n      dispatch(publish(request))\n    }\n  }, [leagueState, dispatch])\n\n  if(userState === status.LOADING || \n    leagueState === status.LOADING) {\n    return (\n      <div className=\"loader-container\">\n        <ThemeSwitcher />\n        <PickLoader />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeSwitcher />\n      <Router>\n        <Home />\n        <MessagePopup />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks/picksSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/league/leagueSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.ts",["266","267","268","269","270"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/token/tokenSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/announcements/announcementsSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-standings/userStandingsSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-details/userDetailsSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user-pick-data/userPickDataSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/picks-for-user/picksForUserSlice.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/status.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/theme-switcher/theme-switcher.tsx",["271"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/home.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/message/messagePopup.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/endpoints.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/localData.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/announcement/announcement.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pick/pick.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/topics.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/routes.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/user-stats/user-stats.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/home/components/nav-bar/nav-bar.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.tsx",["272"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../controller/user/userSlice';\nimport { selectPicksIds, fetchPicks, getPicksSetWeek } from '../../controller/picks/picksSlice';\nimport { fetchGames } from '../../controller/games/gamesSlice';\nimport { selectLeague } from '../../controller/league/leagueSlice';\nimport { Switch, Route, useLocation, useParams, useHistory } from \"react-router-dom\";\nimport { GamesTabBar } from './components/games-tab-bar/games-tab-bar';\nimport { WeekSwitcher } from './components/week-switcher/week-switcher';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon } from 'semantic-ui-react';\nimport { WEEK_SHOW_WEEKS, SHOW_MESSAGE } from '../../configs/topics';\nimport \"./games.css\";\nimport \"../../utils/slideTransition.scss\";\nimport { fetchUserPickData } from '../../controller/user-pick-data/userPickDataSlice';\nimport { PickPeekModal } from '../../components/pick-peek-modal/pick-peek-modal';\nimport { status } from '../../configs/status';\nimport { UserTypeEnum } from '../../model/user/user';\nimport { useSwipeable } from 'react-swipeable';\nimport { RootState } from '../../store';\nimport { SeasonRequest } from '../../model/postRequests/seasonRequest';\nimport { publish, PubSub, subscribe } from '../../controller/pubSub/pubSubSlice';\nimport { SnackMessage } from '../../components/message/messagePopup';\n\ninterface RouteParams {\n    slug: string\n}\n\ntype Props = {\n    routes: {path: string, component: any}[] | undefined\n}\n\nexport const Games = ({routes}: Props) => {\n    const user = useSelector(selectUser);\n    const league = useSelector(selectLeague);\n    const pickIds = useSelector(selectPicksIds);\n    const gamesState = useSelector((state: RootState) => state.games.status);\n    const leagueState = useSelector((state: RootState) => state.league.status);\n    const picksState = useSelector((state:RootState) => state.picks.status);\n    const pickForUserState = useSelector((state:RootState) => state.picksForUser.status);\n    const userPickDataState = useSelector((state: RootState) => state.userPickData.status);\n    const setWeek = useSelector(getPicksSetWeek);\n    const sub = useSelector(subscribe);\n    const dispatch = useDispatch();\n\n    let location = useLocation();\n    let history = useHistory();\n    const animationTime = { enter: 200, exit: 200};\n    let view = useParams<RouteParams>();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const season = parseInt(query.get(\"season\") || \"\");\n    const week = parseInt(query.get(\"week\") || \"\" );\n    const seasonType = parseInt(query.get(\"seasonType\")||\"\")\n    const other = query.get(\"user\");\n\n    const currSeason = league.currentSeason\n    const currWeek = league.currentWeek \n    const currSeasonType = league.currentSeasonType\n    const [weeksShown, setWeeksShown] = useState(false);\n    const weekQuery = `?season=${season}&seasonType=${seasonType}&week=${week}`;\n\n    const swipeView = (view: string) => {\n        if(season === null) {\n            history.push(`/games/${view}`);\n        } else {\n            history.push(`/games/${view}${weekQuery}`);\n        }\n    }\n\n    const swipeHandlers = useSwipeable({\n        onSwipedRight: () => swipeView('game'),\n        onSwipedLeft: () => swipeView('pick'),\n        delta : 100,\n    });\n\n\n    const spectatorView = (user.type !== UserTypeEnum.PARTICIPANT) && (\n        <div className=\"header-container\">\n            <div className=\"spectator-container warn-background\">\n                <div className=\"base-color spectator-icon\">\n                    <Icon name=\"binoculars\" />\n                </div>\n                <span className=\"base-color\">\n                    Spectator Mode\n                </span>\n            </div>\n        </div>\n    );\n\n    const gamesTab = (user.type === UserTypeEnum.PARTICIPANT && (other === null || other === \"null\")) && (\n        <GamesTabBar pickCount={pickIds.length}/>\n    )\n\n    const transitionGroup = (!weeksShown) && (\n        <TransitionGroup component=\"div\" className=\"route-container\">\n            <CSSTransition \n                key={view.slug} \n                timeout={animationTime} \n                classNames=\"pageSlider\" \n                mountOnEnter={false} \n                unmountOnExit={true}>\n                <div className={view.slug === \"pick\" ? \"left\" : \"right\"}>\n                    <Switch location={location}>\n                        {(routes) && routes.map((route, i) =>(\n                            <Route\n                                key={i}\n                                path={route.path}\n                                render={props => (<route.component key={i} />)}\n                            />\n                        ))}\n                    </Switch>\n                </div>\n            </CSSTransition>\n        </TransitionGroup>\n    );\n\n    useEffect(() => {\n        if(gamesState === status.IDLE && \n            leagueState === status.COMPLETE) {\n                let request = new SeasonRequest(currSeason, currSeasonType, currWeek)\n                dispatch(fetchGames(request));\n                dispatch(fetchUserPickData(request));\n                if(other === null || other === \"null\") {\n                    dispatch(fetchPicks(request));\n                }\n        }\n    }, [gamesState, leagueState, currSeason, currWeek, currSeasonType, dispatch, user, other])\n\n    useEffect(() => {\n        const shouldRefresh = () => {\n            if(season && week && seasonType) {\n                return week !== setWeek;\n            } else {\n                return false;\n            }\n        }\n\n        if(shouldRefresh()){\n            let request = new SeasonRequest(season, seasonType, week)\n            dispatch(fetchGames(request));\n            dispatch(fetchUserPickData(request));\n            if(other === null || other === \"null\") {\n                dispatch(fetchPicks(request));\n            }\n        }\n    }, [dispatch, user, season, week, seasonType, view, currWeek, other, setWeek])\n\n    useEffect(() => {\n        if(gamesState === status.ERROR \n            || picksState === status.ERROR\n            || pickForUserState === status.ERROR\n            || userPickDataState === status.ERROR){\n                \n            let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n            dispatch(publish(request));\n        }\n    }, [gamesState, dispatch]);\n\n    useEffect(() => {\n        if(sub.topic === WEEK_SHOW_WEEKS) {\n            setWeeksShown(sub.data);\n        }\n    }, [sub, dispatch])\n\n    return (\n        <div {...swipeHandlers} style={{ touchAction: 'pan-y' }}>\n            { spectatorView }\n            { gamesTab }\n            <div className=\"games-week-container\">\n                <div className=\"week-switcher-container\">\n                    <WeekSwitcher />\n                </div>\n                { transitionGroup }\n            </div>\n            <PickPeekModal />\n        </div>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/standings.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/announcements/announcements.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/profile/profile.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.tsx",["273","274"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from '../../../../controller/user/userSlice';\nimport { addPicks, selectPicksGamesIds, selectPicksMessage } from '../../../../controller/picks/picksSlice';\nimport { selectGameIds } from '../../../../controller/games/gamesSlice';\nimport { GameLoader } from '../../../../components/game-loader/game-loader';\nimport { GameDashboardWrapper } from './game-dashboard-wrapper';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { selectLeague } from '../../../../controller/league/leagueSlice';\nimport { status } from '../../../../configs/status';\nimport { setStagedPicksLocal, resetStagedPicksLocal, getStagedPicksLocal } from '../../../../utils/localData';\nimport './game-dashboard.css';\nimport { RootState } from '../../../../store';\nimport { PickSelected } from '../../../../model/pickSelected/pickSelected';\nimport { PickRequest } from '../../../../model/postRequests/pickRequest';\nimport { Pick } from '../../../../model/pick/pick';\nimport { publish, PubSub } from '../../../../controller/pubSub/pubSubSlice';\nimport { SnackMessage } from '../../../../components/message/messagePopup';\nimport { SHOW_MESSAGE } from '../../../../configs/topics';\n\nexport const GameDashboard = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(selectUser);\n    const selectedGames = useSelector(selectGameIds);\n    const selectedPicksGames = useSelector(selectPicksGamesIds);\n    const gamesIds = selectedGames.filter(gameId => !selectedPicksGames.includes(gameId));\n    const gameLoader = useSelector((state: RootState) => state.games.status);\n    const pickLoader = useSelector((state: RootState) => state.picks.status);\n    const picksMessage = useSelector(selectPicksMessage);\n    const league = useSelector(selectLeague);\n    \n    const history = useHistory();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const week = parseInt(query.get(\"week\") || \"\");\n\n    const [stagedPicks, setStagedPicks] = useState(getStagedPicksLocal() != null ? getStagedPicksLocal() : {});\n    const [stagedCount, setStagedCount] = useState(getStagedPicksLocal() == null ? 0 : Object.keys(getStagedPicksLocal()).length);\n    const [submitSent, setSubmitSent] = useState(false);\n\n    const teamSelected = (event: PickSelected) => {\n        let updated = setStagedPicksLocal(stagedPicks, event);\n        setStagedCount(Object.keys(updated).length);\n        setStagedPicks(updated);\n    }\n\n    const submitPicks = () => {\n        let stagedPicksList = Object.values(stagedPicks) as Pick[];\n        let request = new PickRequest(0,0,0,user.user_id,stagedPicksList)\n        dispatch(addPicks(request));\n        setSubmitSent(true);\n    }\n\n    const noGames = gamesIds.length === 0 && (\n        <div className=\"no-games-set secondary-color\">\n            No Unpicked Games\n        </div>\n    );\n    \n    const getSubmitClass = () => {\n        return (stagedCount > 0 && \n            (week === league.currentWeek\n            || week === null)) ? \n            \"submit-container show-submit-button\" : \"submit-container hide-submit-button\"\n    };\n\n    const games = gamesIds.map((gameId, index) => {\n        return(\n            <GameDashboardWrapper\n                key={\"game-wrapper-\" + gameId}\n                id={gameId} \n                previousId={gamesIds[index - 1]}\n                index={index}\n                picked={stagedPicks === {} ? null : stagedPicks[gameId]}\n                userId={user?.user_id}\n                onTeamSelected={teamSelected}\n            />\n        )\n    });\n\n    useEffect(() => {\n        if(Object.values(stagedPicks).find((initial:any) => new Date(initial.pick_submit_by_date) > new Date()) == null) {\n            setStagedCount(0);\n            setStagedPicks({});\n        }\n    },[]);\n\n    useEffect(() => {\n        if(pickLoader === status.COMPLETE && submitSent) {\n            setStagedPicks({});\n            setStagedCount(0);\n            resetStagedPicksLocal();\n            setSubmitSent(false);\n\n            let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.PICKS.ADD_SUCCESS));\n            dispatch(publish(request));\n\n            history.push(\"/games/pick\");\n        }\n        if(pickLoader === status.ERROR && submitSent) {\n            setSubmitSent(false);\n            if(picksMessage != null) {\n                alert(picksMessage);\n            } else {\n                let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n                dispatch(publish(request));\n            }\n        }\n    },[pickLoader, submitSent, stagedPicks, history, picksMessage]);\n\n    if(gameLoader === status.LOADING || \n        gamesIds === undefined || \n        pickLoader === status.LOADING) {\n\n        return (<GameLoader height={110} count={8}/>)\n    }\n\n    return (\n        <div className=\"games-container page\">\n            { noGames }\n            { games }\n            <div className={getSubmitClass()}>\n                <Button className=\"primary-background base-color submit-button\" onClick={submitPicks}>\n                    <Icon name='send'/> Submit ({stagedCount})\n                </Button>\n            </div>\n        </div>\n    );\n} ","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard.tsx",["275","276"],"import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPicksIds, updatePicks, deletePicks, selectPicksMessage } from '../../../../controller/picks/picksSlice';\nimport { GameLoader } from '../../../../components/game-loader/game-loader';\nimport { PicksDashboardWrapper } from './picks-dashboard-wrapper';\nimport { NAV_DONE_BUTTON, NAV_EDIT_BUTTON, SHOW_MESSAGE } from '../../../../configs/topics';\nimport { status } from '../../../../configs/status';\nimport { Icon } from 'semantic-ui-react';\nimport { selectUser } from '../../../../controller/user/userSlice';\nimport { RootState } from '../../../../store';\nimport { PickSelected } from '../../../../model/pickSelected/pickSelected';\nimport { Pick } from '../../../../model/pick/pick';\nimport { PickDeleteRequest } from '../../../../model/postRequests/pickDeleteRequest';\nimport { PickRequest } from '../../../../model/postRequests/pickRequest';\nimport { clear, publish, PubSub, subscribe } from '../../../../controller/pubSub/pubSubSlice';\nimport './picks-dashboard.css';\nimport { SnackMessage } from '../../../../components/message/messagePopup';\n\nexport const PicksDashboard = () => {\n\n    const pickIds = useSelector(selectPicksIds);\n    const loader = useSelector((state: RootState) => state.picks.status);\n    const sub = useSelector(subscribe);\n    const user = useSelector(selectUser);\n    const picksMessage = useSelector(selectPicksMessage);\n\n    const [updatePicksArray, setUpdatePicks] = useState([] as Pick[]);\n    const [deletePicksArray, setDeletePicks] = useState([] as number[]); \n    const [inEditMode, setInEditMode] = useState(false);\n    const [submitSent, setSubmitSent] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(loader === status.ERROR) {\n            if(picksMessage != null) {\n                alert(picksMessage);\n            } else {\n                let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n                dispatch(publish(request));\n            }\n        }\n\n        if(loader === status.COMPLETE && submitSent) {\n            let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.SUCCESS, status.MESSAGE.PICKS.EDIT_SUCCESS));\n            dispatch(publish(request)); \n            setSubmitSent(false);\n        }\n    },[loader, picksMessage, status]);\n\n    useEffect(() => {\n\n        if(sub.topic === NAV_DONE_BUTTON) {\n            if(deletePicksArray.length !== 0 ) {\n                let request = new PickDeleteRequest(0, 0, 0, user.user_id, deletePicksArray)\n                dispatch(deletePicks(request))\n            }\n            if(updatePicksArray.length !== 0){\n                let request = new PickRequest(0,0,0, user.user_id, updatePicksArray)\n                dispatch(updatePicks(request));\n            }\n            setSubmitSent(true);\n            dispatch(clear());\n        }\n        \n        if(sub.topic === NAV_EDIT_BUTTON) {\n            setInEditMode(sub.data);\n        } else {\n            setInEditMode(false);\n        }\n\n    }, [dispatch, sub]);\n\n    if(loader === status.LOADING || pickIds === undefined) {\n        return (\n            <GameLoader height={110} count={8}/>\n        )\n    }\n\n    const teamSelected = (event: PickSelected) => {\n        let updatePick = event.pick;\n        \n        if(event.highlight) {\n            let tempUpdate = updatePicksArray;\n            if(updatePicksArray.find(pick => pick.pick_id === updatePick.pick_id)) {\n                tempUpdate = updatePicksArray.filter(pick => pick.pick_id !== updatePick.pick_id);\n            } else {\n                tempUpdate.push(updatePick);\n            }\n            setUpdatePicks(tempUpdate);\n        }\n    }\n\n    const onDelete = (pickToDelete: Pick) => {\n        let tempDelete = deletePicksArray;\n        let tempUpdate = updatePicksArray.filter(pick => pick.pick_id !== pickToDelete.pick_id)\n        tempDelete.push(pickToDelete.pick_id);\n        setDeletePicks(tempDelete);\n        setUpdatePicks(tempUpdate);\n    }\n\n    const noPicks = pickIds.length === 0 && (\n        <div className=\"no-picks-set secondary-color\">\n            <div className=\"no-picks-set-content\">No picks made</div>\n            <br></br>\n            <div className=\"secondary-color empty-icon\">\n                <Icon name='hand point left'/>\n            </div>\n        </div>\n    );\n\n    const games = pickIds.map((pickId, index) => {\n        return(\n            <PicksDashboardWrapper\n                key={\"game-wrapper-\" + pickId}\n                id={pickId} \n                previousId={pickIds[index - 1]}\n                index={index}\n                userId={user?.user_id}\n                onTeamSelected={teamSelected}\n                inEditMode={inEditMode}\n                onDelete={onDelete}\n            />\n        )\n    });\n\n    return (\n        <div className=\"games-container page\">\n            { noPicks }\n            { games }\n        </div>\n    );\n} ","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/others-dashboard/others-dashboard.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/dateRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/themes.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/pickDeleteRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/picks-dashboard/picks-dashboard-wrapper.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-peek-modal/pick-peek-modal.tsx",["277"],"import React, { useState,useEffect }  from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\nimport { TeamCard } from '../game-card/components/team-card/team-card';\nimport { selectLeague } from '../../controller/league/leagueSlice';\nimport { selectPicksForUser } from '../../controller/picks-for-user/picksForUserSlice';\nimport { fetchPicksForUser } from '../../controller/picks-for-user/picksForUserSlice';\nimport { SHOW_MODAL, SHOW_MESSAGE } from '../../configs/topics';\nimport \"./pick-peek-modal.css\";\nimport { GameLoader } from '../game-loader/game-loader';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { status } from '../../configs/status';\nimport { PickStatus } from '../game-card/components/pick-staus/pick-status';\nimport { GameWinStatusEnum, GameStatusEnum } from '../../model/game/game';\nimport { RootState } from '../../store';\nimport { PickRequest } from '../../model/postRequests/pickRequest';\nimport { PicksUser } from '../../model/picksUser/picksUser';\nimport { clear, publish, PubSub, subscribe } from '../../controller/pubSub/pubSubSlice';\nimport { SnackMessage } from '../message/messagePopup';\n\nexport const PickPeekModal = () => {\n    \n    const [showModal, setShowModal] = useState(false);\n    const league = useSelector(selectLeague);\n    const leagueState = useSelector((state: RootState) => state.league.status);\n    const userPicks = useSelector(selectPicksForUser);\n    const userPicksState = useSelector((state: RootState) => state.picksForUser.status);\n    const [userData, setUserData] = useState({user_id: -1, first_name: '', last_name: '', user_inits: ''});\n    const sub = useSelector(subscribe);\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n    let { search } = useLocation();\n    const query = new URLSearchParams(search);\n    const season = query.get(\"season\") === null ? league.currentSeason : parseInt(query.get(\"season\") || \"\");\n    const week = query.get(\"week\") === null ? league.currentWeek : parseInt(query.get(\"week\") || \"\")\n    const seasonType = query.get(\"seasonType\") === null ? league.currentSeasonType : parseInt(query.get(\"seasonType\") || \"\");\n\n    const closeClick = () => {\n        setShowModal(false);\n        dispatch(clear());\n    }\n\n    const viewPicks = () => {\n        history.push(`/games/others?season=${season}&seasonType=${seasonType}&week=${week}&user=${userData.user_id}`);\n        closeClick();\n    }\n\n    const pickResult = (pick: PicksUser) => {\n        if(pick.game_status === GameStatusEnum.completed && pick != null){\n            if(pick.pick.team_id === pick.winning_team_id) {\n              return GameWinStatusEnum.win;\n            } else if(pick.winning_team_id === null) {\n              return GameWinStatusEnum.push;\n            } else {\n              return GameWinStatusEnum.loss;\n            }\n          }\n          else {\n            return null;\n          }\n    }\n\n    const modalHeader = (\n        <div className=\"modal-header tiertary-background\" onClick={() => closeClick()}>\n            <div className=\"close-modal-icon secondary-color\">\n                <Icon name=\"times\"/>\n            </div>\n            <div className=\"secondary-color week-modal-title\"><b>Week {week} Picks</b></div>\n        </div>\n    );\n\n    const modalInitIcon = (\n        <div className=\"modal-init\">\n            <div className=\"init-icon base-color primary-background\">\n                { userData.user_inits }\n            </div>\n        </div>\n    );\n\n    const modalTitle = (\n        <div className=\"modal-title\">\n            <Button icon labelPosition='right' className=\"view-picks-button tiertary-light-background secondary-color\" onClick={() => viewPicks()}>\n                <div className=\"card-header-text\">\n                    {userData.first_name} {userData.last_name}\n                </div>\n                <Icon name=\"chevron right\" className=\"secondary-color\"/>      \n            </Button>\n        </div>\n    )\n\n    const userPicksLoading = (userPicksState === 'loading') && (\n        <GameLoader height={50} count={4}/>\n    )\n\n    const userPicksNone = (userPicksState === 'complete' && userPicks.length === 0) && (\n        <div className=\"picks-none-container\">   \n            No Picks\n        </div>\n    ) \n\n    const userPicksContent = (userPicksState === 'complete') && userPicks.map((pick: PicksUser) => {\n        return(\n            <div className=\"teams-container\">\n                <div className=\"team-picks\">\n                    <TeamCard\n                        team={pick.awayTeam}\n                        locked={false}\n                        size=\"medium\"\n                        highlight={pick.awayTeam.team_id === pick.pick.team_id}\n                        disabled={true}\n                        score={null}\n                        fill={null}\n                        spread={null}\n                        onTeamSelected={()=>null}\n                    />\n                    <PickStatus \n                        submitTime={pick?.pick_submit_by_date}\n                        pickSuccess={pickResult(pick)}\n                        gameStatus={pick?.game_status} \n                    />\n                    <TeamCard\n                        team={pick.homeTeam}\n                        locked={false}\n                        size=\"medium\"\n                        highlight={pick.homeTeam.team_id === pick.pick.team_id}\n                        disabled={true}\n                        score={null}\n                        fill={null}\n                        spread={null}\n                        onTeamSelected={()=>null}\n                    />\n                </div>\n            </div>\n        )\n    })\n\n    const modalContent = (\n        <div className=\"modal-content\">\n            { userPicksLoading }\n            { userPicksNone }\n            { userPicksContent }\n        </div>\n    )\n\n    const userModal = (showModal) && (\n        <Modal\n            onClose={() => closeClick()}\n            open={showModal}\n            className=\"base-background secondary-color\"\n        >\n            { modalHeader }\n            { modalInitIcon }\n            { modalTitle }\n            { modalContent }\n        </Modal>\n    );\n\n    useEffect(() => {\n        if(leagueState === status.COMPLETE && userData.user_id !== 0) {\n            let request = new PickRequest(season, seasonType, week, userData.user_id, []);\n            dispatch(fetchPicksForUser(request));\n        }\n    }, [userData.user_id, leagueState, league, dispatch]);\n\n    useEffect(() => {\n        if(userPicksState === status.ERROR) {\n            let request = new PubSub(SHOW_MESSAGE, new SnackMessage(status.ERROR, status.MESSAGE.ERROR_GENERIC));\n            dispatch(publish(request));\n        }\n    },[dispatch, userPicksState]);\n\n    useEffect(() => {\n        if(sub.topic === SHOW_MODAL) {\n            setUserData(sub.data);\n        } \n    }, [sub])\n\n\n    return (\n        <>\n            { userModal }\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-user-card/standings-user-card.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/standings/components/standings-loader/standings-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-loader/game-loader.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard-wrapper.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/game-card.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/pick-staus/pick-status.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/pickSelected/pickSelected.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/users-pick-data/users-pick-data.tsx",["278"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport { selectUserPickDataByGame } from '../../../../controller/user-pick-data/userPickDataSlice';\nimport { Game, GameStatusEnum } from '../../../../model/game/game';\nimport { PicksUserData } from '../../../../model/picksUserData/picksUserData';\nimport { RootState } from '../../../../store';\nimport { SHOW_MODAL } from '../../../../configs/topics';\nimport './users-pick-data.css';\nimport { publish, PubSub } from '../../../../controller/pubSub/pubSubSlice';\n\ntype Props = {\n    game: Game\n}\n\nexport const UsersPickData = ({ game }:Props) => {\n\n    const picksData = useSelector((state: RootState) => selectUserPickDataByGame(state, game.game_id));\n    const awayPicks = picksData ? picksData.filter((pick) => pick.team_id === game.away_team_id): [];\n    const homePicks = picksData ? picksData.filter((pick) => pick.team_id === game.home_team_id): [];\n    const [showPickers, setShowPickers] = useState(false);\n    const dispatch = useDispatch();\n\n    const picksDataClick = () => {\n        setShowPickers(!showPickers);\n    }\n\n    const closePicksData = () => {\n        setShowPickers(false);\n    }\n\n    const setUserModal = (pick: PicksUserData) => {\n        dispatch(publish(new PubSub(SHOW_MODAL, pick)));\n    }\n\n    const containerClass = () => {\n        if(game.game_status === GameStatusEnum.completed) {\n            return \"picks-data-container-final\";\n        } else {\n            return \"picks-data-container\";\n        }\n    }\n\n    const groupClass = () => {\n        if(game.game_status === GameStatusEnum.completed) {\n            return \"picks-data-group-final\";\n        } else {\n            return \"picks-data-group\";\n        }\n    }\n\n    const getIconColor = (teamType: string) => {\n        if(game.game_status === GameStatusEnum.completed) {\n            if(game.winning_team_id === null) {\n                return \"accent\";\n            } else if(teamType === 'away' && game.winning_team_id === game.away_team_id) {\n                return \"base-color\"\n            } else if(teamType === 'home' && game.winning_team_id === game.home_team_id) {\n                return \"base-color\"\n            } else {\n                return \"accent\";\n            }\n        } else {\n            return \"accent\";\n        }\n        \n    }\n\n    const picksDataButton = (\n        <div className={containerClass()}>\n            <div className={groupClass()}>\n                <div className=\"floating-users-pick-button\" onClick={picksDataClick}>\n                    <div className=\"user-pick-label-container\">\n                        <div className=\"tiertary-color user-pick-label\">\n                            <div className={getIconColor('away')  + \" user-pick-font\" }>{awayPicks.length}</div>\n                            <Icon name='user' className={getIconColor('away')}/>\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"floating-users-pick-button\" onClick={picksDataClick}>\n                    <div className=\"user-pick-label-container\">\n                        <div className=\"tiertary-color user-pick-label\">\n                            <div className={getIconColor('home')  + \" user-pick-font\"}>{homePicks.length}</div>\n                            <Icon name='user' className={getIconColor('home')}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const buttonListAway = awayPicks.map((pick) => {\n        return (\n            <Button className=\"user-item secondary-color tiertary-light-background\" onClick={() => setUserModal(pick)}>\n                <div>{ pick.first_name } {pick.last_name.substring(0,1)}.</div>\n            </Button>\n        );\n    });\n\n    const buttonListHome = homePicks.map((pick) => {\n        return (\n            <Button className=\"user-item secondary-color tiertary-light-background\" onClick={() => setUserModal(pick)}>\n                <div>{ pick.first_name } {pick.last_name.substring(0,1)}.</div>\n            </Button>\n        ); \n    })\n\n    const picksDataList = (showPickers) && (\n        <div className=\"users-pick-list\">\n            <div className=\"picks-data-users\">\n                <div className=\"users-column\">\n                    { buttonListAway }\n                </div>\n                <div className=\"users-column\">\n                    { buttonListHome }\n                </div>\n            </div>\n            <Button onClick={closePicksData} className=\"show-less-button secondary-color base-background\">\n                <div className=\"show-less-button-group\">\n                    <div className=\"close-modal-icon\">\n                        <Icon name=\"chevron up\" />\n                    </div>\n                    Show Less\n                </div>\n            </Button>\n        </div>\n    )\n\n    return (\n        <>\n            { picksDataList }\n            { picksDataButton }\n        </>\n    );\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/game-card/components/team-card/team-card.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/team/team.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/postRequests/seasonRequest.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.ts",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/week-switcher/week-switcher.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/games-tab-bar/games-tab-bar.tsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/pubSub/pubSubSlice.ts",[],{"ruleId":"279","severity":1,"message":"280","line":9,"column":10,"nodeType":"281","messageId":"282","endLine":9,"endColumn":21},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":39,"column":5,"nodeType":"289","endLine":39,"endColumn":7,"suggestions":"290"},{"ruleId":"279","severity":1,"message":"291","line":8,"column":10,"nodeType":"281","messageId":"282","endLine":8,"endColumn":21},{"ruleId":"279","severity":1,"message":"292","line":9,"column":10,"nodeType":"281","messageId":"282","endLine":9,"endColumn":17},{"ruleId":"279","severity":1,"message":"293","line":9,"column":19,"nodeType":"281","messageId":"282","endLine":9,"endColumn":25},{"ruleId":"279","severity":1,"message":"294","line":10,"column":10,"nodeType":"281","messageId":"282","endLine":10,"endColumn":22},{"ruleId":"279","severity":1,"message":"295","line":11,"column":10,"nodeType":"281","messageId":"282","endLine":11,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":23,"column":8,"nodeType":"289","endLine":23,"endColumn":13,"suggestions":"296"},{"ruleId":"287","severity":1,"message":"297","line":158,"column":8,"nodeType":"289","endLine":158,"endColumn":30,"suggestions":"298"},{"ruleId":"287","severity":1,"message":"299","line":87,"column":7,"nodeType":"289","endLine":87,"endColumn":9,"suggestions":"300"},{"ruleId":"287","severity":1,"message":"288","line":110,"column":7,"nodeType":"289","endLine":110,"endColumn":67,"suggestions":"301"},{"ruleId":"287","severity":1,"message":"302","line":49,"column":7,"nodeType":"289","endLine":49,"endColumn":37,"suggestions":"303"},{"ruleId":"287","severity":1,"message":"304","line":72,"column":8,"nodeType":"289","endLine":72,"endColumn":23,"suggestions":"305"},{"ruleId":"287","severity":1,"message":"306","line":164,"column":8,"nodeType":"289","endLine":164,"endColumn":57,"suggestions":"307"},{"ruleId":"279","severity":1,"message":"308","line":3,"column":24,"nodeType":"281","messageId":"282","endLine":3,"endColumn":29},"@typescript-eslint/no-unused-vars","'IfStatement' is defined but never used.","Identifier","unusedVar","no-native-reassign",["309"],"no-negated-in-lhs",["310"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["311"],"'useDispatch' is defined but never used.","'publish' is defined but never used.","'PubSub' is defined but never used.","'SHOW_MESSAGE' is defined but never used.","'SnackMessage' is defined but never used.",["312"],"React Hook useEffect has missing dependencies: 'pickForUserState', 'picksState', and 'userPickDataState'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'stagedPicks'. Either include it or remove the dependency array.",["314"],["315"],"React Hook useEffect has missing dependencies: 'dispatch' and 'submitSent'. Either include them or remove the dependency array. Outer scope values like 'status' aren't valid dependencies because mutating them doesn't re-render the component.",["316"],"React Hook useEffect has missing dependencies: 'deletePicksArray', 'updatePicksArray', and 'user.user_id'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'season', 'seasonType', and 'week'. Either include them or remove the dependency array.",["318"],"'Label' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},"Update the dependencies array to be: [dispatch]",{"range":"335","text":"336"},"Update the dependencies array to be: [dispatch, sub]",{"range":"337","text":"338"},"Update the dependencies array to be: [gamesState, dispatch, picksState, pickForUserState, userPickDataState]",{"range":"339","text":"340"},"Update the dependencies array to be: [stagedPicks]",{"range":"341","text":"342"},"Update the dependencies array to be: [pickLoader, submitSent, stagedPicks, history, picksMessage, dispatch]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch, loader, picksMessage, submitSent]",{"range":"345","text":"346"},"Update the dependencies array to be: [deletePicksArray, dispatch, sub, updatePicksArray, user.user_id]",{"range":"347","text":"348"},"Update the dependencies array to be: [userData.user_id, leagueState, league, dispatch, season, seasonType, week]",{"range":"349","text":"350"},[1468,1470],"[dispatch]",[772,777],"[dispatch, sub]",[6480,6502],"[gamesState, dispatch, picksState, pickForUserState, userPickDataState]",[3933,3935],"[stagedPicks]",[4746,4806],"[pickLoader, submitSent, stagedPicks, history, picksMessage, dispatch]",[2376,2406],"[dispatch, loader, picksMessage, submitSent]",[3107,3122],"[deletePicksArray, dispatch, sub, updatePicksArray, user.user_id]",[6479,6528],"[userData.user_id, leagueState, league, dispatch, season, seasonType, week]"]