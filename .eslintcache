[{"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.js":"1","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.js":"2","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.js":"3","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.js":"4","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.jsx":"5","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.jsx":"6","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.js":"7","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.js":"8","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.js":"9","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.js":"10","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.js":"11","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.js":"12","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.jsx":"13","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.jsx":"14","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.js":"15","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/teams/teamsSlice.js":"16","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.jsx":"17","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game/game.jsx":"18","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/team/team.jsx":"19","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.js":"20","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.js":"21"},{"size":658,"mtime":1615555981402,"results":"22","hashOfConfig":"23"},{"size":358,"mtime":1616451811760,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":108,"mtime":1615251072555,"results":"26","hashOfConfig":"23"},{"size":7034,"mtime":1615574956977,"results":"27","hashOfConfig":"23"},{"size":2619,"mtime":1615383715038,"results":"28","hashOfConfig":"23"},{"size":344,"mtime":1615419711242,"results":"29","hashOfConfig":"23"},{"size":2203,"mtime":1615574807139,"results":"30","hashOfConfig":"23"},{"size":1144,"mtime":1615578986283,"results":"31","hashOfConfig":"23"},{"size":443,"mtime":1615490130283,"results":"32","hashOfConfig":"23"},{"size":430,"mtime":1615489557533,"results":"33","hashOfConfig":"23"},{"size":994,"mtime":1615489348371,"results":"34","hashOfConfig":"23"},{"size":624,"mtime":1616452552896,"results":"35","hashOfConfig":"23"},{"size":1081,"mtime":1616452047815,"results":"36","hashOfConfig":"23"},{"size":1417,"mtime":1616452637085,"results":"37","hashOfConfig":"23"},{"size":769,"mtime":1616441968583,"results":"38","hashOfConfig":"23"},{"size":1867,"mtime":1616451832570,"results":"39","hashOfConfig":"23"},{"size":2194,"mtime":1616452081276,"results":"40","hashOfConfig":"23"},{"size":2432,"mtime":1616452098304,"results":"41","hashOfConfig":"23"},{"size":1542,"mtime":1616433350850,"results":"42","hashOfConfig":"23"},{"size":1117,"mtime":1616377922205,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1u3njjf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/index.js",[],["89","90"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/App.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/reportWebVitals.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/store.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/login/login.jsx",["91","92","93"],"import React, { useState } from 'react'\nimport { PickLogo } from '../../components/pick-logo/pick-logo'\nimport './login.css'\nimport { Form, Input, Button, Message,Icon } from 'semantic-ui-react'\nimport AmplifyAuth, { AmplifyEnum } from '../../utils/amplifyAuth'\nimport store from '../../store'\nimport { fetchUser } from '../../controller/user/userSlice'\n\nexport const Login = () => {\n    const formInfo = {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        code: \"\",\n        authUser: {},\n    }\n\n    const [title, setTitle] = useState('pickem');\n    const [completeLoginForm, setCompleteLoginForm] = useState(false);\n    const [forgotPasswordForm, setForgotPasswordForm] = useState(false);\n    const [passwordIncorrect, setPasswordIncorrect] = useState(false);\n    const [passwordMismatch, setPasswordMismatch] = useState(false);\n    const [emptyUsername, setEmptyUsername] = useState(false);\n    const [formData, setFormData] = useState(formInfo);\n    const [laoder, setLoader] = useState(false);\n\n    const handleChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    const completeForgotPassword = () => {\n        setPasswordMismatch(formData.password !== formData.confirmPassword);\n        if(!passwordMismatch) {\n            AmplifyAuth.ForgotPassword(formData.username, formData.password, formData.code).then((result) => {\n                if(result.error === AmplifyEnum.inValidUser) {\n                    alert(\"Something went wrong\");\n                } else {\n                    getUserInfo();\n                }\n            });\n        }\n    }\n\n    const completeLogin = () => {\n        setPasswordMismatch(formData.password !== formData.confirmPassword);\n        if(!passwordMismatch) {\n            AmplifyAuth.CompletePasswordLogin(formData.password, formData.authUser).then((result) => {\n                if(result.error === AmplifyEnum.inValidUser) {\n                    alert(\"Something went wrong\");\n                } else {\n                    getUserInfo();\n                }\n            });\n        }\n    }\n\n    const authorize = () => {\n        AmplifyAuth.AmplifyLogin(formData.username, formData.password).then((result) => {\n            setLoader(false);\n            if(result.error === AmplifyEnum.inValidUser) {\n                setPasswordIncorrect(true);\n            } else if(result.challengeName != null && result.challengeName === AmplifyEnum.needNewPassword) {\n                setFormData({...formData, authUser: result});\n                setTitle('Welcome!');\n                setCompleteLoginForm(true);\n                setFormData({...formData, password: ''});\n            } else {\n                getUserInfo();\n            }\n        });\n    }\n    \n    const getUserInfo = () => {\n        store.dispatch(fetchUser(formData.username, formData.passsword));\n        setLoader(false);\n    }\n\n    const attemptLogin = event => {\n        event.preventDefault();\n        setLoader(true);\n        if(formData.username === '') {\n            setLoader(false);\n            setEmptyUsername(true);\n        } else {\n            if(forgotPasswordForm) {\n                completeForgotPassword();\n            } else if(completeLoginForm) {\n                completeLogin();\n            } else {\n                authorize();\n            }\n        }\n    }\n\n    const forgotPassword = () => {\n        setPasswordIncorrect(false);\n        setEmptyUsername(false);\n        setFormData({...formData, password: ''});\n        setForgotPasswordForm(true);\n        setTitle('Whoops...');\n        AmplifyAuth.SendForgotPasswordCode(formData.username);\n    }\n\n    const usernameForm = !completeLoginForm && (\n        <Form.Field\n            control={Input}\n            name=\"username\"\n            placeholder=\"Username/Email\"\n            type=\"text\"\n            icon='user'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.username}\n            className=\"loginInput\"\n            error={emptyUsername && {\n                content: 'Must provide username or email',\n                pointing: 'above'\n            } || passwordIncorrect}\n        />\n    );\n\n    const codeForm = forgotPasswordForm && (\n        <Form.Field \n            control={Input}\n            name=\"code\"\n            type=\"text\"\n            placeholder=\"Verification code\"\n            icon='key'\n            iconPosition='left'\n            className=\"loginInput\"\n            onChange={handleChange}\n            value={formData.code}\n        />\n    );\n\n    const passwordForm = (\n        <Form.Field\n            control={Input}\n            name='password'\n            placeholder={forgotPasswordForm ? \"New Password\" : \"Password\"}\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            className=\"loginInput\"\n            onChange={handleChange} \n            value={formData.password}\n            error={passwordIncorrect && {\n                content: 'Username or password incorrect',\n                pointing: 'above'\n            }}\n        />\n    );\n\n    const passwordConfirmForm = (forgotPasswordForm || completeLoginForm) && (\n        <Form.Field\n            control={Input}\n            name='confirmPassword'\n            placeholder='Confirm password'\n            type='password'\n            icon='lock'\n            iconPosition='left'\n            onChange={handleChange} \n            value={formData.confirmPassword}\n            className=\"loginInput\"\n            error={passwordMismatch && { \n                content: 'Passwords do not match.',\n                pointing: 'above'\n            }}\n        />\n    )\n\n    return (\n\n        <div className=\"loginContainer\">\n            <div className=\"loginHeader\">\n                <div>\n                    <PickLogo sizeParam=\"'m'\"></PickLogo>\n                </div>\n                <div className=\"loginTitle\">\n                    {title}\n                </div>\n                { forgotPasswordForm && \n                <Message warning>\n                    <Icon name='info circle'/>\n                    Check your email for a code.\n                </Message> }\n                <Form onSubmit={attemptLogin} className=\"loginForm\" size='big'>\n                    { usernameForm }\n                    { codeForm }\n                    { passwordForm }\n                    { passwordConfirmForm }\n\n                    {laoder ? \n                        <Button loading basic className=\"loginButton primary-background base noSelect\">Loading</Button>:\n                        <Button basic content=\"Login\" type=\"submit\" className=\"loginButton primary-background base noSelect\" />\n                    }\n                </Form>\n                { passwordIncorrect && \n                <Message warning>\n                    <Icon name='help circle'/>\n                    Forgot Password?&nbsp;<a onClick={forgotPassword}>Reset here.</a>\n                </Message> }\n            </div>\n        </div>  \n    );\n} \n","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-logo/pick-logo.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/aws-exports.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/amplifyAuth.js",["94"],"import { Auth } from 'aws-amplify';\n\nexport const AmplifyEnum = {\n    needNewPassword: 'NEW_PASSWORD_REQUIRED',\n    inValidUser: 'INVALID_USER',\n    emailFail: 'SEND_EMAIL_FAILED',\n    success :'SUCCESS'\n}\n\nexport default class AmplifyAuth {\n    \n    static async AmplifyLogin (username, password) {\n        try {\n            const response = await Auth.signIn({username: username, password: password});\n            if(response?.username) {\n                if(response.challengeName === AmplifyEnum.needNewPassword) {\n                    return response;\n                } else {\n                    const signedInUser = await Auth.currentSession();\n                    localStorage.setItem(\"token\", signedInUser.getIdToken().getJwtToken());\n                    return response;\n                }\n            } else {\n                return {error: AmplifyEnum.inValidUser}\n            }\n        } catch(error) {\n            return {error: AmplifyEnum.inValidUser}\n        }\n    }\n\n    static async CompletePasswordLogin(newPassword, authUser) {\n        const { requiredAttributes } = authUser.challengeParam;\n        try {\n            const response = await Auth.completeNewPassword(authUser, newPassword, requiredAttributes);\n            const signedInUser = await Auth.currentSession();\n            localStorage.setItem(\"token\", signedInUser.getIdToken().getJwtToken());\n            return {success: AmplifyEnum.success};\n        } catch(error) {\n            return {error: AmplifyEnum.inValidUser}\n        }\n    }\n\n    static async ForgotPassword(username, password, code) {\n        try {\n            const response = await Auth.forgotPasswordSubmit(username, code, password);\n            const signedInUser = await Auth.currentSession();\n            localStorage.setItem(\"token\", signedInUser.getIdToken().getJwtToken());\n            return response;\n        } catch(error) {\n            return {error: AmplifyEnum.inValidUser}\n        }\n    }\n\n    static async SendForgotPasswordCode(username) {\n        try {\n            const response = await Auth.forgotPassword(username);\n            return response;\n        } catch(error) {\n            return {error: AmplifyEnum.emailFail}\n        }\n    }\n}","/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/user/userSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/user/user.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/configs/environment.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/client.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/games.jsx",["95"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game-dashboard/game-dashboard.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/games/gamesSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/controller/teams/teamsSlice.js",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/pick-loader/pick-loader.jsx",[],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/views/games/components/game/game.jsx",["96"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/components/team/team.jsx",["97","98","99","100","101","102","103","104","105"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/utils/dateFormatter.js",["106","107","108","109","110","111","112","113"],"/Users/paulskorski/Documents/PicksApp/react-picks-app/src/model/game/game.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":118,"column":34,"nodeType":"120","messageId":"121","endLine":118,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":121,"column":15,"nodeType":"120","messageId":"121","endLine":121,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":204,"column":43,"nodeType":"124","endLine":204,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":34,"column":19,"nodeType":"127","messageId":"128","endLine":34,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":13,"column":35,"nodeType":"131","endLine":13,"endColumn":41,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":13,"column":62,"nodeType":"135","messageId":"136","endLine":13,"endColumn":64},{"ruleId":"125","severity":1,"message":"137","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":12,"column":9,"nodeType":"140","messageId":"141","endLine":31,"endColumn":10},{"ruleId":"142","severity":1,"message":"143","line":13,"column":27,"nodeType":"144","messageId":"145","endLine":18,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":19,"column":28,"nodeType":"144","messageId":"145","endLine":24,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":20,"column":21,"nodeType":"127","messageId":"148","endLine":20,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":26,"column":21,"nodeType":"127","messageId":"148","endLine":26,"endColumn":30},{"ruleId":"133","severity":1,"message":"149","line":27,"column":35,"nodeType":"135","messageId":"136","endLine":27,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":58,"column":21,"nodeType":"127","messageId":"152","endLine":58,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":62,"column":37,"nodeType":"127","messageId":"152","endLine":62,"endColumn":43},{"ruleId":"133","severity":1,"message":"149","line":20,"column":25,"nodeType":"135","messageId":"136","endLine":20,"endColumn":27},{"ruleId":"133","severity":1,"message":"149","line":25,"column":29,"nodeType":"135","messageId":"136","endLine":25,"endColumn":31},{"ruleId":"133","severity":1,"message":"149","line":33,"column":32,"nodeType":"135","messageId":"136","endLine":33,"endColumn":34},{"ruleId":"133","severity":1,"message":"149","line":33,"column":58,"nodeType":"135","messageId":"136","endLine":33,"endColumn":60},{"ruleId":"133","severity":1,"message":"134","line":33,"column":87,"nodeType":"135","messageId":"136","endLine":33,"endColumn":89},{"ruleId":"133","severity":1,"message":"149","line":35,"column":39,"nodeType":"135","messageId":"136","endLine":35,"endColumn":41},{"ruleId":"133","severity":1,"message":"149","line":35,"column":65,"nodeType":"135","messageId":"136","endLine":35,"endColumn":67},{"ruleId":"133","severity":1,"message":"149","line":35,"column":94,"nodeType":"135","messageId":"136","endLine":35,"endColumn":96},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array.","ArrayExpression",["155"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Icon' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-redeclare","'classList' is already defined.","redeclared","Expected '===' and instead saw '=='.","no-use-before-define","'spread' was used before it was defined.","usedBeforeDefined","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [getGames, user]",{"range":"158","text":"159"},[539,545],"[getGames, user]"]